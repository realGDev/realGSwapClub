{"version":3,"sources":["components/assets/ammo.png","components/assets/pugSusu.png","components/assets/pugEwtt.png","components/assets/ammoUsdc.png","components/assets/gsUsdc.png","components/assets/pugUsdc.png","components/assets/pugBnb.png","components/assets/slrPug.png","components/assets/pugAmmo.png","components/assets/promoAbout.png","components/assets/gs.png","components/assets/gngLotto.png","components/assets/pugToken.png","components/App.js","components/pages/Lottery.js","components/pages/About.js","components/pages/Staking.js","components/NavBar.js","components/MApp.js","serviceWorker.js","index.js","components/assets/gangster.png","components/assets/ewt.png","components/assets/gLotto.png"],"names":["module","exports","farm_opening","Date","tokenABI","name","inputs","type","indexed","anonymous","outputs","constant","payable","gas","Home","Component","componentWillMount","loadBlockchainData","props","dispatch","AmmoUsdcRewardDisplay","then","ammo_usdc_interval","setInterval","GsUsdcRewardDisplay","gs_usdc_interval","PugEwtRewardDisplay","pug_ewt_interval","PugSusuRewardDisplay","pug_susu_interval","PugUsdcRewardDisplay","pug_usdc_interval","PugBnbRewardDisplay","pug_bnb_interval","PugSlrRewardDisplay","pug_slr_interval","PugAmmoRewardDisplay","pug_ammo_interval","componentWillUnmount","clearInterval","this","window","ethereum","web3","Web3","eth","net","getId","netId","getBlockNumber","blockAc","console","log","getAccounts","accounts","getBalance","ewt_balance","setState","account","utils","fromWei","alert","ammoContract","Contract","Token","abi","networks","address","gsContract","GS","pugContract","methods","totalSupply","call","ammo_usdc_supply_apy","gs_supply_apy","days_year","toFixed","gs_usdc_supply_apy","ammo_totalSupply","pug_susu_apy","ammo_supply_apy","pug_usdc_apy","pug_bnb_apy","pug_slr_apy","pug_ewt_apy","pug_ammo_apy","ammo_usdc_contract","balanceOf","ammo_usdc_clp","ammo_usdc_clp_wallet_balance","gs_usdc_contract","gs_usdc_clp","gs_usdc_clp_wallet_balance","pug_ewt_contract","pug_ewt_clp","pug_ewt_clp_wallet_balance","pug_susu_contract","pug_susu_clp","pug_susu_clp_wallet_balance","pug_usdc_contract","pug_slr_contract","pug_slr_clp","pug_slr_clp_wallet_balance","pug_ammo_contract","pug_ammo_clp","pug_ammo_clp_wallet_balance","pug_usdc_clp","pug_usdc_clp_wallet_balance","pug_bnb_contract","pug_bnb_clp","pug_bnb_clp_wallet_balance","pMasterChef","PugMasterChef","state","ammo_wallet_wei","ammoAddress","ammo_wallet_balance","getFeeAddress","ammoFeeAddress","userInfo","user_farm_0","user_farm_1","user_farm_2","user_farm_3","user_farm_4","user_farm_5","pendingSushi","pdt_rewards_0","pdt_rewards_1","pdt_rewards_2","pdt_rewards_3","pdt_rewards_4","pdt_rewards_5","gMasterChef","GMasterChef","gs_wallet_wei","gSAddress","gS_wallet_balance","gSFeeAddress","user_gs_farm_0","pdt_gs_rewards_0","user_gs_farm_1","pdt_gs_rewards_1","depo_clp_pug_ewt_amount_precision","amount","depo_clp_pug_susu_amount_precision","depo_clp_pug_usdc_amount_precision","depo_clp_pug_bnb_amount_precision","depo_clp_pug_slr_amount_precision","depo_clp_pug_ammo_amount_precision","depo_clp_pug_ewt_amount","depo_clp_pug_susu_amount","depo_clp_pug_usdc_amount","depo_clp_pug_bnb_amount","depo_clp_pug_slr_amount","depo_clp_pug_ammo_amount","depo_clp_ammo_usdc_amount_precision","depo_clp_ammo_usdc_amount","depo_clp_gs_usdc_amount_precision","depo_clp_gs_usdc_amount","containReward_0","containReward_1","containReward_2","containReward_3","containReward_4","containReward_5","containGsReward_0","containGsReward_1","reward_farm_0","reward_farm_1","reward_farm_2","reward_farm_3","reward_farm_4","reward_farm_5","reward_gs_farm_0","toString","replace","farmContracts","gfarmContracts","ammo","pug","gs","pmasterChefAddress","gmasterChefAddress","feeAddres","gSfeeAddres","reward_pug_ewt_pdt_ammo","reward_pug_susu_pdt_ammo","reward_pug_usdc_pdt_ammo","reward_pug_bnb_pdt_ammo","reward_pug_slr_pdt_ammo","reward_pug_ammo_pdt_ammo","reward_ammo_usdc_pdt_gs","reward_gs_usdc_pdt_gs","gs_wallet_balance","reward_ammo_usdc_pdt_gs_precision","reward_gs_usdc_pdt_gs_precision","deposit_ammo_usdc_clp","BN","gasPrice","dep_amount","toWei","deposit","allow","approve","send","from","location","reload","deposit_gs_usdc_clp","deposit_pug_ewt_clp","deposit_pug_susu_clp","deposit_pug_usdc_clp","deposit_pug_bnb_clp","deposit_pug_slr_clp","deposit_pug_ammo_clp","withdraw_ammo_usdc_clp","e","user_farm_0_gs","maxAmount","withdraw","preventDefault","withdraw_gs_usdc_clp","user_farm_1_gs","withdraw_pug_ewt_clp","fee","gFeeAddress","transfer","withdraw_pug_susu_clp","withdraw_pug_usdc_clp","withdraw_pug_bnb_clp","withdraw_pug_slr_clp","withdraw_pug_ammo_clp","constructor","super","ChangeCLP_AMMO_USDC_Amount","event","target","value","undefined","input_lp_ammo_usdc","ChangeCLP_GS_USDC_Amount","input_lp_gs_usdc","ChangeCLP_PUG_EWT_Amount","input_lp_pug_ewt","ChangeCLP_PUG_SUSU_Amount","input_lp_pug_susu","ChangeCLP_PUG_USDC_Amount","input_lp_pug_usdc","ChangeCLP_PUG_BNB_Amount","input_lp_pug_bnb","ChangeCLP_PUG_SLR_Amount","input_lp_pug_slr","ChangeCLP_PUG_AMMO_Amount","input_lp_pug_ammo","pair","render","className","style","background","class","size","color","align","now","display","alignItems","justifyContent","role","height","width","src","gsUsdc","alt","onClick","placeholder","onChange","pugEwtt","pugSusu","pugAmmo","slrPug","ammoUsdc","pugUsdc","pugBnb","gngLotto","endContest_0","Lottery","GetLotto_0","on","enable","lottery","LotteryContract","balance","winnings","ticketsLength","leng","gLotto","allTickets","probability","pot","index","tickets","options","Math","round","gLotto_0","gLotto_0_probability","gLotto_0_allTickets","pot_0","Buy_gLotto_0","id","buyingAmount","buy","Withdraw_gLotto_0","contest_0_winner","firstTime","innerWidth","ewt","percent","strokeWidth","strokeColor","trailColor","margin","date","About","addGS","request","method","params","symbol","decimals","image","addPUG","addAMMO","promoAbout","Stake","GsStakingRewardDisplay","gs_staking_interval","gsStakingContract","user_staking_0","depo_gs_staking_precision","depo_gs_staking","gStakingContracts","reward_gs_staking","gs_reward_precision","DepositGsStaking","WithdrawGsStaking","Change_GS_Amount","input_gs_staking","gsToken","syle","alignContent","marginLeft","paddingRight","NavBar","loadUrlPrice","url","fetch","response","json","fetchJson","pugPrice","pugBalance","pgBal","round_pug_balance","gangster_pug_balance","screenWidth","paddingLeft","paddingTop","href","verticalAlign","padding","rel","no-select","substr","length","App","React","path","exact","to","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a68625b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ammo.1c45617d.png\";","module.exports = __webpack_public_path__ + \"static/media/pugSusu.5970caab.png\";","module.exports = __webpack_public_path__ + \"static/media/pugEwtt.e78b0492.png\";","module.exports = __webpack_public_path__ + \"static/media/ammoUsdc.bbdc1124.png\";","module.exports = __webpack_public_path__ + \"static/media/gsUsdc.8c758de4.png\";","module.exports = __webpack_public_path__ + \"static/media/pugUsdc.def99904.png\";","module.exports = __webpack_public_path__ + \"static/media/pugBnb.6b312d70.png\";","module.exports = __webpack_public_path__ + \"static/media/slrPug.80c60d15.png\";","module.exports = __webpack_public_path__ + \"static/media/pugAmmo.39662bdc.png\";","module.exports = __webpack_public_path__ + \"static/media/promoAbout.e7ae8bb1.png\";","module.exports = __webpack_public_path__ + \"static/media/gs.59fc8360.png\";","module.exports = __webpack_public_path__ + \"static/media/gngLotto.c8ec7766.png\";","module.exports = __webpack_public_path__ + \"static/media/pugToken.7d9d1f42.png\";","import { Tabs, Tab } from \"react-bootstrap\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { BrowserRouter, Route, Switch, Link, NavLink } from \"react-router-dom\";\n// import  Routes from './routes';\n\nimport Web3 from \"web3\";\nimport Countdown from \"react-countdown\";\n\nimport \"./App.css\";\n// import EwtFarm from './ewtFarm.js';\n\n//!FAKE -- delete!\nimport Ewt_Fake from \"../abis/Ewt_lp.json\";\nimport Ammo_Fake from \"../abis/Ammo_lp.json\";\nimport Clp2 from \"../abis/CLP_2.json\";\nimport Clp3 from \"../abis/CLP_3.json\";\nimport Clp4 from \"../abis/CLP_4.json\";\n//!end : FAKE -- delete!\n\nimport PugMasterChef from \"../abis/PMasterChef.json\";\nimport Token from \"../abis/SusuToken.json\";\n//TODO: Implement\nimport GMasterChef from \"../abis/GMasterChef.json\";\nimport GS from \"../abis/GSToken.json\";\n\nimport pugSusu from \"./assets/pugSusu.png\";\nimport pugEwtt from \"./assets/pugEwtt.png\";\nimport ammoUsdc from \"./assets/ammoUsdc.png\";\nimport gsUsdc from \"./assets/gsUsdc.png\";\nimport pugUsdc from \"./assets/pugUsdc.png\";\nimport pugBnb from \"./assets/pugBnb.png\";\nimport slrPug from \"./assets/slrPug.png\";\nimport pugAmmo from \"./assets/pugAmmo.png\";\nimport gngLotto from \"./assets/gngLotto.png\";\n\nconst farm_opening = new Date(2021, 6, 5, 19, 0, 0, 0);\n\nconst gs_pair_0 = \"AMMO-USDC\";\nconst gs_pair_1 = \"G$-USDC\";\nconst pair_0 = \"PUG-EWT\";\nconst pair_1 = \"PUG-SUSU\";\nconst pair_3 = \"PUG-USDC\";\nconst pair_4 = \"PUG-BNB\";\nconst pair_5 = \"PUG-SLR\";\nconst pair_6 = \"PUG-AMMO\";\nconst pug_ewt_contract_address = \"0xc61500fa1bfa61312c71393a202149bac9ce1de4\";\nconst ammo_usdc_contract_address = \"0x20ae3646e74dfec646b2788286065f642245ca5f\";\nconst gs_usdc_contract_address = \"0xc6838a932e29283aa3b286306b3d3656748832f9\";\nconst pug_susu_contract_address = \"0x6a6a9a7215b402771d2a35866a2c445cdc2a4019\";\nconst pug_usdc_contract_address = \"0xdc3323a7cd9bd55660f6a461cd14f91c2668de27\";\nconst pug_bnb_contract_address = \"0x9bdb88dff2d0639d4824512152794114f557d411\";\nconst pug_slr_contract_address = \"0xc376a565e670a31516bf81339f09153466b8f196\";\nconst pug_ammo_contract_address = \"0xE99bDF79cB46416E28BBFd2dc9c8f8454D7bDC09\";\n\nconst pugContractAddress = \"0x59b6196e41c118dfF75961257b882e86b915a0e8\";\nconst GS_Block = 0.001074735449735;\nconst gsPrice = 1;\nconst AMMO_per_Block = 5.642364376368273;\nconst EWT_Block_Time = 5.8;\nconst EWT_Blocks_Day = (60 * 60 * 24) / EWT_Block_Time;\nconst days_year = 365;\nconst ttl_gs_allo = 5;\nconst ammo_usdc_allo = 1;\nconst gs_usdc_allo = 4;\n\nconst ttl_pugs_allo = 7;\nconst pug_ewt_allo = 3;\nconst pug_susu_allo = 2;\nconst pug_usdc_allo = 1;\nconst pug_bnb_allo = 1;\nconst pug_slr_allo = 2;\nconst pug_ammo_allo = 3;\n\nconst tokenABI = [\n  {\n    name: \"Transfer\",\n    inputs: [\n      { type: \"address\", name: \"_from\", indexed: true },\n      { type: \"address\", name: \"_to\", indexed: true },\n      { type: \"uint256\", name: \"_value\", indexed: false },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"Approval\",\n    inputs: [\n      { type: \"address\", name: \"_owner\", indexed: true },\n      { type: \"address\", name: \"_spender\", indexed: true },\n      { type: \"uint256\", name: \"_value\", indexed: false },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"__init__\",\n    outputs: [],\n    inputs: [\n      { type: \"bytes32\", name: \"_name\" },\n      { type: \"bytes32\", name: \"_symbol\" },\n      { type: \"uint256\", name: \"_decimals\" },\n      { type: \"uint256\", name: \"_supply\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"constructor\",\n  },\n  {\n    name: \"deposit\",\n    outputs: [],\n    inputs: [],\n    constant: false,\n    payable: true,\n    type: \"function\",\n    gas: 74279,\n  },\n  {\n    name: \"withdraw\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [{ type: \"uint256\", name: \"_value\" }],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 108706,\n  },\n  {\n    name: \"totalSupply\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 543,\n  },\n  {\n    name: \"balanceOf\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [{ type: \"address\", name: \"_owner\" }],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 745,\n  },\n  {\n    name: \"transfer\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_to\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 74698,\n  },\n  {\n    name: \"transferFrom\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_from\" },\n      { type: \"address\", name: \"_to\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 110600,\n  },\n  {\n    name: \"approve\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_spender\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 37888,\n  },\n  {\n    name: \"allowance\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_owner\" },\n      { type: \"address\", name: \"_spender\" },\n    ],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 1025,\n  },\n  {\n    name: \"name\",\n    outputs: [{ type: \"bytes32\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 723,\n  },\n  {\n    name: \"symbol\",\n    outputs: [{ type: \"bytes32\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 753,\n  },\n  {\n    name: \"decimals\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 783,\n  },\n];\n\nclass Home extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    //* G$ Rewards Reload\n    this.AmmoUsdcRewardDisplay().then(() => {\n      const ammo_usdc_interval = setInterval(\n        () => this.AmmoUsdcRewardDisplay(),\n        10 * 1000\n      );\n      this.ammo_usdc_interval = ammo_usdc_interval;\n    });\n    this.GsUsdcRewardDisplay().then(() => {\n      const gs_usdc_interval = setInterval(\n        () => this.GsUsdcRewardDisplay(),\n        10 * 1000\n      );\n      this.gs_usdc_interval = gs_usdc_interval;\n    });\n\n    //* $AMMO Rewards Reload\n    this.PugEwtRewardDisplay().then(() => {\n      const pug_ewt_interval = setInterval(\n        () => this.PugEwtRewardDisplay(),\n        10 * 1000\n      );\n      this.pug_ewt_interval = pug_ewt_interval;\n    });\n    this.PugSusuRewardDisplay().then(() => {\n      const pug_susu_interval = setInterval(\n        () => this.PugSusuRewardDisplay(),\n        10 * 1000\n      );\n      this.pug_susu_interval = pug_susu_interval;\n    });\n    this.PugUsdcRewardDisplay().then(() => {\n      const pug_usdc_interval = setInterval(\n        () => this.PugUsdcRewardDisplay(),\n        10 * 1000\n      );\n      this.pug_usdc_interval = pug_usdc_interval;\n    });\n    this.PugBnbRewardDisplay().then(() => {\n      const pug_bnb_interval = setInterval(\n        () => this.PugBnbRewardDisplay(),\n        10 * 1000\n      );\n      this.pug_bnb_interval = pug_bnb_interval;\n    });\n    this.PugSlrRewardDisplay().then(() => {\n      const pug_slr_interval = setInterval(\n        () => this.PugSlrRewardDisplay(),\n        10 * 1000\n      );\n      this.pug_slr_interval = pug_slr_interval;\n    });\n    this.PugAmmoRewardDisplay().then(() => {\n      const pug_ammo_interval = setInterval(\n        () => this.PugAmmoRewardDisplay(),\n        10 * 1000\n      );\n      this.pug_ammo_interval = pug_ammo_interval;\n    });\n\n    //*Interval ends\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.ammo_usdc_interval);\n    clearInterval(this.gs_usdc_interval);\n    clearInterval(this.pug_ewt_interval);\n    clearInterval(this.pug_susu_interval);\n    clearInterval(this.pug_usdc_interval);\n    clearInterval(this.pug_bnb_interval);\n    clearInterval(this.pug_slr_interval);\n    clearInterval(this.pug_ammo_interval);\n    // this._isMounted = false;  <----- tried\n  }\n\n  async loadBlockchainData(dispatch) {\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      const netId = await web3.eth.net.getId();\n      const blockAc = await web3.eth.getBlockNumber();\n\n      console.log(`Gangster you are connected through NET: ${netId}`);\n      console.log(`Actual Block: ${blockAc}`);\n      const accounts = await web3.eth.getAccounts();\n      console.log(\"Currently Connected to G$wap with address:\");\n      console.log(accounts[0]);\n\n      //load ewt_balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const ewt_balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          ewt_balance: web3.utils.fromWei(ewt_balance),\n          web3: web3,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n        const ammoContract = new web3.eth.Contract(\n          Token.abi,\n          Token.networks[netId].address\n        );\n\n        //TODO: AQUI\n        const gsContract = new web3.eth.Contract(\n          GS.abi,\n          GS.networks[netId].address\n        );\n        const pugContract = new web3.eth.Contract(tokenABI, pugContractAddress);\n\n        // //! APYsss G$\n        const totalSupply = await gsContract.methods.totalSupply().call();\n        const gs_supply_apy =\n          (100 * ((GS_Block / totalSupply) * (GS_Block * EWT_Blocks_Day) + 1)) ^\n          (days_year - 1 - 1); //!  G$ SUPPLY APY\n\n        let ammo_usdc_supply_apy =\n          (gs_supply_apy * ammo_usdc_allo) / ttl_gs_allo;\n        ammo_usdc_supply_apy = (+ammo_usdc_supply_apy).toFixed(2);\n        let gs_usdc_supply_apy = (gs_supply_apy * gs_usdc_allo) / ttl_gs_allo;\n        gs_usdc_supply_apy = (+gs_usdc_supply_apy).toFixed(2);\n\n        const ammo_totalSupply = await ammoContract.methods\n          .totalSupply()\n          .call();\n        const ammo_supply_apy =\n          (100 *\n            ((AMMO_per_Block / ammo_totalSupply) *\n              (AMMO_per_Block * EWT_Blocks_Day) +\n              1)) ^\n          (days_year - 1 - 1); //!  G$ SUPPLY APY\n        let pug_ewt_apy = (ammo_supply_apy * pug_ewt_allo) / ttl_pugs_allo;\n        let pug_susu_apy = (ammo_supply_apy * pug_susu_allo) / ttl_pugs_allo;\n        let pug_usdc_apy = (ammo_supply_apy * pug_usdc_allo) / ttl_pugs_allo;\n        let pug_bnb_apy = (ammo_supply_apy * pug_bnb_allo) / ttl_pugs_allo;\n        let pug_slr_apy = (ammo_supply_apy * pug_slr_allo) / ttl_pugs_allo;\n        let pug_ammo_apy = (ammo_supply_apy * pug_ammo_allo) / ttl_pugs_allo;\n\n        pug_ewt_apy = (+pug_ewt_apy).toFixed(2);\n\n        pug_susu_apy = (+pug_susu_apy).toFixed(2);\n\n        pug_usdc_apy = (+pug_usdc_apy).toFixed(2);\n\n        pug_bnb_apy = (+pug_bnb_apy).toFixed(2);\n        pug_slr_apy = (+pug_slr_apy).toFixed(2);\n        pug_ammo_apy = (+pug_slr_apy).toFixed(2);\n\n        this.setState({\n          ammo_usdc_supply_apy: ammo_usdc_supply_apy,\n          gs_usdc_supply_apy: gs_usdc_supply_apy,\n          pug_ewt_apy: pug_ewt_apy,\n          pug_susu_apy: pug_susu_apy,\n          pug_usdc_apy: pug_usdc_apy,\n          pug_bnb_apy: pug_bnb_apy,\n          pug_slr_apy: pug_slr_apy,\n          pug_ammo_apy: pug_ammo_apy,\n        });\n\n        //TODO: AQUI\n        const ammo_usdc_contract = new web3.eth.Contract(\n          tokenABI,\n          ammo_usdc_contract_address\n        );\n        const ammo_usdc_clp = await ammo_usdc_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const ammo_usdc_clp_wallet_balance = web3.utils.fromWei(ammo_usdc_clp);\n        const gs_usdc_contract = new web3.eth.Contract(\n          tokenABI,\n          gs_usdc_contract_address\n        );\n        const gs_usdc_clp = await gs_usdc_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const gs_usdc_clp_wallet_balance = web3.utils.fromWei(gs_usdc_clp);\n\n        const pug_ewt_contract = new web3.eth.Contract(\n          tokenABI,\n          pug_ewt_contract_address\n        );\n        const pug_ewt_clp = await pug_ewt_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const pug_ewt_clp_wallet_balance = web3.utils.fromWei(pug_ewt_clp);\n\n        const pug_susu_contract = new web3.eth.Contract(\n          tokenABI,\n          pug_susu_contract_address\n        );\n        const pug_susu_clp = await pug_susu_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const pug_susu_clp_wallet_balance = web3.utils.fromWei(pug_susu_clp);\n\n        const pug_usdc_contract = new web3.eth.Contract(\n          tokenABI,\n          pug_usdc_contract_address\n        );\n        const pug_slr_contract = new web3.eth.Contract(\n          tokenABI,\n          pug_slr_contract_address\n        );\n        const pug_slr_clp = await pug_slr_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const pug_slr_clp_wallet_balance = web3.utils.fromWei(pug_slr_clp);\n        const pug_ammo_contract = new web3.eth.Contract(\n          tokenABI,\n          pug_ammo_contract_address\n        );\n        const pug_ammo_clp = await pug_ammo_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const pug_ammo_clp_wallet_balance = web3.utils.fromWei(pug_ammo_clp);\n        const pug_usdc_clp = await pug_usdc_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const pug_usdc_clp_wallet_balance = web3.utils.fromWei(pug_usdc_clp);\n\n        const pug_bnb_contract = new web3.eth.Contract(\n          tokenABI,\n          pug_bnb_contract_address\n        );\n        const pug_bnb_clp = await pug_bnb_contract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const pug_bnb_clp_wallet_balance = web3.utils.fromWei(pug_bnb_clp);\n\n        const pMasterChef = new web3.eth.Contract(\n          PugMasterChef.abi,\n          PugMasterChef.networks[netId].address\n        );\n        const ammo_wallet_wei = await ammoContract.methods\n          .balanceOf(this.state.account)\n          .call();\n\n        const ammoAddress = Token.networks[netId].address;\n        const ammo_wallet_balance = web3.utils.fromWei(ammo_wallet_wei);\n        const ammoFeeAddress = await pMasterChef.methods.getFeeAddress().call();\n\n        let user_farm_0 = await pMasterChef.methods\n          .userInfo(0, this.state.account)\n          .call();\n        let user_farm_1 = await pMasterChef.methods\n          .userInfo(1, this.state.account)\n          .call();\n        let user_farm_2 = await pMasterChef.methods\n          .userInfo(2, this.state.account)\n          .call();\n        let user_farm_3 = await pMasterChef.methods\n          .userInfo(3, this.state.account)\n          .call();\n        let user_farm_4 = await pMasterChef.methods\n          .userInfo(4, this.state.account)\n          .call();\n        let user_farm_5 = await pMasterChef.methods\n          .userInfo(5, this.state.account)\n          .call();\n\n        let pdt_rewards_0 = await pMasterChef.methods\n          .pendingSushi(0, this.state.account)\n          .call();\n        let pdt_rewards_1 = await pMasterChef.methods\n          .pendingSushi(1, this.state.account)\n          .call();\n        let pdt_rewards_2 = await pMasterChef.methods\n          .pendingSushi(2, this.state.account)\n          .call();\n        let pdt_rewards_3 = await pMasterChef.methods\n          .pendingSushi(3, this.state.account)\n          .call();\n        let pdt_rewards_4 = await pMasterChef.methods\n          .pendingSushi(4, this.state.account)\n          .call();\n        let pdt_rewards_5 = await pMasterChef.methods\n          .pendingSushi(5, this.state.account)\n          .call();\n\n        //TODO: AQUI\n        const gMasterChef = new web3.eth.Contract(\n          GMasterChef.abi,\n          GMasterChef.networks[netId].address\n        );\n        const gs_wallet_wei = await ammoContract.methods\n          .balanceOf(this.state.account)\n          .call();\n        const gSAddress = Token.networks[netId].address;\n        const gS_wallet_balance = web3.utils.fromWei(gs_wallet_wei);\n        //TODO: AQUI\n        const gSFeeAddress = await gMasterChef.methods.getFeeAddress().call();\n\n        let user_gs_farm_0 = await gMasterChef.methods\n          .userInfo(0, this.state.account)\n          .call();\n        let pdt_gs_rewards_0 = await gMasterChef.methods\n          .pendingSushi(0, this.state.account)\n          .call();\n\n        let user_gs_farm_1 = await gMasterChef.methods\n          .userInfo(2, this.state.account)\n          .call();\n        let pdt_gs_rewards_1 = await gMasterChef.methods\n          .pendingSushi(2, this.state.account)\n          .call();\n\n        //* Deposited on PUG\n        let depo_clp_pug_ewt_amount_precision = web3.utils.fromWei(\n          user_farm_0.amount\n        );\n        let depo_clp_pug_susu_amount_precision = web3.utils.fromWei(\n          user_farm_1.amount\n        );\n        let depo_clp_pug_usdc_amount_precision = web3.utils.fromWei(\n          user_farm_2.amount\n        );\n        let depo_clp_pug_bnb_amount_precision = web3.utils.fromWei(\n          user_farm_3.amount\n        );\n        let depo_clp_pug_slr_amount_precision = web3.utils.fromWei(\n          user_farm_4.amount\n        );\n        let depo_clp_pug_ammo_amount_precision = web3.utils.fromWei(\n          user_farm_5.amount\n        );\n\n        const depo_clp_pug_ewt_amount =\n          (+depo_clp_pug_ewt_amount_precision).toFixed(4);\n        const depo_clp_pug_susu_amount =\n          (+depo_clp_pug_susu_amount_precision).toFixed(4);\n        const depo_clp_pug_usdc_amount =\n          (+depo_clp_pug_usdc_amount_precision).toFixed(4);\n        const depo_clp_pug_bnb_amount =\n          (+depo_clp_pug_bnb_amount_precision).toFixed(4);\n        const depo_clp_pug_slr_amount =\n          (+depo_clp_pug_slr_amount_precision).toFixed(4);\n        const depo_clp_pug_ammo_amount =\n          (+depo_clp_pug_ammo_amount_precision).toFixed(4);\n\n        //* Deposited on GS\n\n        //TODO: AQUI\n        const depo_clp_ammo_usdc_amount_precision = web3.utils.fromWei(\n          user_gs_farm_0.amount\n        );\n        const depo_clp_ammo_usdc_amount =\n          (+depo_clp_ammo_usdc_amount_precision).toFixed(5);\n        const depo_clp_gs_usdc_amount_precision = web3.utils.fromWei(\n          user_gs_farm_1.amount\n        );\n        const depo_clp_gs_usdc_amount =\n          (+depo_clp_gs_usdc_amount_precision).toFixed(5);\n\n        //* Rewards\n        let containReward_0 = web3.utils.fromWei(pdt_rewards_0);\n        let containReward_1 = web3.utils.fromWei(pdt_rewards_1);\n        let containReward_2 = web3.utils.fromWei(pdt_rewards_2);\n        let containReward_3 = web3.utils.fromWei(pdt_rewards_3);\n        let containReward_4 = web3.utils.fromWei(pdt_rewards_4);\n        let containReward_5 = web3.utils.fromWei(pdt_rewards_5);\n\n        //TODO: AQUI\n        let containGsReward_0 = web3.utils.fromWei(pdt_gs_rewards_0);\n        let containGsReward_1 = web3.utils.fromWei(pdt_gs_rewards_1);\n\n        let reward_farm_0 = (+containReward_0).toFixed(2);\n        let reward_farm_1 = (+containReward_1).toFixed(2);\n        let reward_farm_2 = (+containReward_2).toFixed(2);\n        let reward_farm_3 = (+containReward_3).toFixed(2);\n        let reward_farm_4 = (+containReward_4).toFixed(2);\n        let reward_farm_5 = (+containReward_5).toFixed(2);\n\n        //TODO: AQUI\n        let reward_gs_farm_0 = (+containGsReward_0).toFixed(5);\n        let reward_gs_farm_1 = (+containGsReward_1).toFixed(5);\n        //TODO: AQUI\n        reward_gs_farm_0 = reward_gs_farm_0\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n        reward_farm_0 = reward_farm_0\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        reward_farm_1 = reward_farm_1\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        reward_farm_2 = reward_farm_2\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        reward_farm_3 = reward_farm_3\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        reward_farm_4 = reward_farm_4\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n        reward_farm_5 = reward_farm_5\n          .toString()\n          .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n        const farmContracts = [\n          pug_ewt_contract,\n          pug_susu_contract,\n          pug_usdc_contract,\n          pug_bnb_contract,\n          pug_slr_contract,\n          pug_ammo_contract,\n        ];\n\n        //TODO: AQUI\n        const gfarmContracts = [ammo_usdc_contract, gs_usdc_contract];\n        this.setState({\n          //! AMMO\n          ammo: ammoContract,\n          ammoAddress: ammoAddress,\n\n          //TODO: AQUI\n          pug: pugContract,\n          gs: gsContract,\n          gSAddress: gSAddress,\n          gfarmContracts: gfarmContracts,\n\n          //! PugMasterChef\n          pMasterChef: pMasterChef,\n          pmasterChefAddress: PugMasterChef.networks[netId].address,\n          //TODO: AQUI\n          gMasterChef: gMasterChef,\n          gmasterChefAddress: GMasterChef.networks[netId].address,\n          feeAddres: ammoFeeAddress,\n          //TODO: AQUI\n          gSfeeAddres: gSFeeAddress,\n          //! All_Farms\n          farmContracts: farmContracts,\n\n          //* PUG FARMS\n          //?Farm_0\n          reward_pug_ewt_pdt_ammo: reward_farm_0,\n          depo_clp_pug_ewt_amount: depo_clp_pug_ewt_amount,\n          depo_clp_pug_ewt_amount_precision: depo_clp_pug_ewt_amount_precision,\n          //?Farm_1\n          reward_pug_susu_pdt_ammo: reward_farm_1,\n          depo_clp_pug_susu_amount: depo_clp_pug_susu_amount,\n          depo_clp_pug_susu_amount_precision:\n            depo_clp_pug_susu_amount_precision,\n          //?Farm_2\n          reward_pug_usdc_pdt_ammo: reward_farm_2,\n          depo_clp_pug_usdc_amount: depo_clp_pug_usdc_amount,\n          depo_clp_pug_usdc_amount_precision:\n            depo_clp_pug_usdc_amount_precision,\n          //?Farm_3\n          reward_pug_bnb_pdt_ammo: reward_farm_3,\n          depo_clp_pug_bnb_amount: depo_clp_pug_bnb_amount,\n          depo_clp_pug_bnb_amount_precision: depo_clp_pug_bnb_amount_precision,\n          //?Farm_4\n          reward_pug_slr_pdt_ammo: reward_farm_4,\n          depo_clp_pug_slr_amount: depo_clp_pug_slr_amount,\n          depo_clp_pug_slr_amount_precision: depo_clp_pug_slr_amount_precision,\n          //?Farm_5\n          reward_pug_ammo_pdt_ammo: reward_farm_5,\n          depo_clp_pug_ammo_amount: depo_clp_pug_ammo_amount,\n          depo_clp_pug_ammo_amount_precision:\n            depo_clp_pug_ammo_amount_precision,\n\n          //TODO: AQUI\n          // //* GS FARMS\n          //?Farm_AMMO_USDC\n          reward_ammo_usdc_pdt_gs: reward_gs_farm_0,\n          depo_clp_ammo_usdc_amount: depo_clp_ammo_usdc_amount,\n          depo_clp_ammo_usdc_amount_precision:\n            depo_clp_ammo_usdc_amount_precision,\n\n          //?Farm_GS_USDC\n          reward_gs_usdc_pdt_gs: reward_gs_farm_0,\n          depo_clp_gs_usdc_amount: depo_clp_gs_usdc_amount,\n          depo_clp_gs_usdc_amount_precision: depo_clp_gs_usdc_amount_precision,\n\n          //? User Globals\n          pug_ewt_clp_wallet_balance: pug_ewt_clp_wallet_balance,\n          pug_susu_clp_wallet_balance: pug_susu_clp_wallet_balance,\n          pug_slr_clp_wallet_balance: pug_slr_clp_wallet_balance,\n          pug_ammo_clp_wallet_balance: pug_ammo_clp_wallet_balance,\n          //TODO: AQUI\n          ammo_usdc_clp_wallet_balance: ammo_usdc_clp_wallet_balance,\n          gs_usdc_clp_wallet_balance: gs_usdc_clp_wallet_balance,\n          pug_usdc_clp_wallet_balance: pug_usdc_clp_wallet_balance,\n          pug_bnb_clp_wallet_balance: pug_bnb_clp_wallet_balance,\n          ammo_wallet_balance: ammo_wallet_balance,\n          //TODO: AQUI\n          gs_wallet_balance: gS_wallet_balance,\n\n          //* Progra Globals\n          web3: web3,\n          netId: netId,\n        });\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n\n  //! REWARDS IN FARMS (G$)\n\n  async AmmoUsdcRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n\n    try {\n      console.log(\"AMMO-USDC REFRESH\");\n      const pdt_rewards_0 = await this.state.gMasterChef.methods\n        .pendingSushi(0, this.state.account)\n        .call();\n      const containGsReward_0 = this.state.web3.utils.fromWei(pdt_rewards_0);\n      const reward_ammo_usdc_pdt_gs_precision =\n        this.state.web3.utils.fromWei(pdt_rewards_0);\n      let reward_farm_0 = (+containGsReward_0).toFixed(5);\n      reward_farm_0 = reward_farm_0\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_ammo_usdc_pdt_gs: reward_farm_0,\n        reward_ammo_usdc_pdt_gs_precision: reward_ammo_usdc_pdt_gs_precision,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  async GsUsdcRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n\n    try {\n      console.log(\"GS-USDC REFRESH\");\n      const pdt_rewards_0 = await this.state.gMasterChef.methods\n        .pendingSushi(2, this.state.account)\n        .call();\n      const containGsReward_0 = this.state.web3.utils.fromWei(pdt_rewards_0);\n      const reward_gs_usdc_pdt_gs_precision =\n        this.state.web3.utils.fromWei(pdt_rewards_0);\n      let reward_farm_0 = (+containGsReward_0).toFixed(5);\n      reward_farm_0 = reward_farm_0\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_gs_usdc_pdt_gs: reward_farm_0,\n        reward_gs_usdc_pdt_gs_precision: reward_gs_usdc_pdt_gs_precision,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  //! REWARDS IN FARMS ($AMMO)\n  async PugEwtRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n    try {\n      console.log(\"trying\");\n      const pdt_rewards_0 = await this.state.pMasterChef.methods\n        .pendingSushi(0, this.state.account)\n        .call();\n      const containReward_0 = this.state.web3.utils.fromWei(pdt_rewards_0);\n      let reward_farm_0 = (+containReward_0).toFixed(2);\n      reward_farm_0 = reward_farm_0\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_pug_ewt_pdt_ammo: reward_farm_0,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  async PugSusuRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n    try {\n      console.log(\"trying\");\n      const pdt_rewards_1 = await this.state.pMasterChef.methods\n        .pendingSushi(1, this.state.account)\n        .call();\n      const containReward_1 = this.state.web3.utils.fromWei(pdt_rewards_1);\n      let reward_farm_1 = (+containReward_1).toFixed(2);\n      reward_farm_1 = reward_farm_1\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_pug_susu_pdt_ammo: reward_farm_1,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  async PugUsdcRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n    try {\n      console.log(\"trying\");\n      const pdt_rewards_2 = await this.state.pMasterChef.methods\n        .pendingSushi(2, this.state.account)\n        .call();\n      const containReward_2 = this.state.web3.utils.fromWei(pdt_rewards_2);\n      let reward_farm_2 = (+containReward_2).toFixed(2);\n      reward_farm_2 = reward_farm_2\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_pug_usdc_pdt_ammo: reward_farm_2,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  async PugBnbRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n    try {\n      console.log(\"trying\");\n      const pdt_rewards_3 = await this.state.pMasterChef.methods\n        .pendingSushi(3, this.state.account)\n        .call();\n      const containReward_3 = this.state.web3.utils.fromWei(pdt_rewards_3);\n      let reward_farm_3 = (+containReward_3).toFixed(2);\n      reward_farm_3 = reward_farm_3\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_pug_bnb_pdt_ammo: reward_farm_3,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  async PugSlrRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n    try {\n      console.log(\"trying\");\n      const pdt_rewards_4 = await this.state.pMasterChef.methods\n        .pendingSushi(4, this.state.account)\n        .call();\n      const containReward_4 = this.state.web3.utils.fromWei(pdt_rewards_4);\n      let reward_farm_4 = (+containReward_4).toFixed(2);\n      reward_farm_4 = reward_farm_4\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_pug_slr_pdt_ammo: reward_farm_4,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  async PugAmmoRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n    try {\n      console.log(\"trying\");\n      const pdt_rewards_5 = await this.state.pMasterChef.methods\n        .pendingSushi(5, this.state.account)\n        .call();\n      const containReward_5 = this.state.web3.utils.fromWei(pdt_rewards_5);\n      let reward_farm_5 = (+containReward_5).toFixed(2);\n      reward_farm_5 = reward_farm_5\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_pug_ammo_pdt_ammo: reward_farm_5,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  //! DEPOSIT IN FARMS (G$)\n  async deposit_ammo_usdc_clp(amount) {\n    if (amount != 0) {\n      const user_gs_farm_0 = await this.state.gfarmContracts[0].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"2\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      if (this.state.GMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.gfarmContracts[0].methods\n            .approve(this.state.gmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n\n          //* Fee GS\n          //TODO: Fee GS\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.gMasterChef.methods.deposit(0, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async deposit_gs_usdc_clp(amount) {\n    if (amount != 0) {\n      const user_gs_farm_0 = await this.state.gfarmContracts[1].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"2\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      if (this.state.GMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.gfarmContracts[1].methods\n            .approve(this.state.gmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n\n          //* Fee GS\n          //TODO: Fee GS\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.gMasterChef.methods.deposit(2, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  //! DEPOSIT IN FARMS (PUG)\n  async deposit_pug_ewt_clp(amount) {\n    if (amount != 0) {\n      const user_farm_0 = await this.state.farmContracts[0].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          const allowed = await this.state.farmContracts[0].methods\n            .approve(this.state.pmasterChefAddress, allow)\n            .send({ from: this.state.account });\n\n          //TODO: 2\n          //TODO: Fee GS\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods.deposit(0, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async deposit_pug_susu_clp(amount) {\n    if (amount != 0) {\n      const user_farm_1 = await this.state.farmContracts[1].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.farmContracts[1].methods\n            .approve(this.state.pmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n          //* FEE (G$)\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods.deposit(1, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async deposit_pug_usdc_clp(amount) {\n    if (amount != 0) {\n      const user_farm_2 = await this.state.farmContracts[2].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.farmContracts[2].methods\n            .approve(this.state.pmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n\n          //* FEE (G$)\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods.deposit(2, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async deposit_pug_bnb_clp(amount) {\n    if (amount != 0) {\n      const user_farm_3 = await this.state.farmContracts[3].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.farmContracts[3].methods\n            .approve(this.state.pmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n\n          //* FEE (G$)\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods.deposit(3, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async deposit_pug_slr_clp(amount) {\n    if (amount != 0) {\n      const user_farm_4 = await this.state.farmContracts[4].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.farmContracts[4].methods\n            .approve(this.state.pmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n\n          //* FEE (G$)\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods.deposit(4, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async deposit_pug_ammo_clp(amount) {\n    if (amount != 0) {\n      const user_farm_5 = await this.state.farmContracts[5].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      const deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.farmContracts[5].methods\n            .approve(this.state.pmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n\n          //* FEE (G$)\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods.deposit(5, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  //! END: DEPOSIT IN FARMS\n\n  //! WITHDRAW GS  FARMS\n\n  async withdraw_ammo_usdc_clp(e) {\n    if (this.state.depo_clp_ammo_usdc_amount_precision > 0) {\n      const user_farm_0_gs = await this.state.gMasterChef.methods\n        .userInfo(0, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_0_gs.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const ammoAddress = this.state.ammoAddress;\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      const currentGSBalance = await this.state.gs.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.gMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //* FEE (G$) withdraw\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.gMasterChef.methods\n            .withdraw(0, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  async withdraw_gs_usdc_clp(e) {\n    if (this.state.depo_clp_gs_usdc_amount_precision > 0) {\n      const user_farm_1_gs = await this.state.gMasterChef.methods\n        .userInfo(2, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_1_gs.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n      const fee = new this.state.web3.utils.BN(\"50000000000000000\");\n\n      const currentGSBalance = await this.state.gs.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.gMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //* FEE (G$) withdraw\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.gMasterChef.methods\n            .withdraw(2, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  //! WITHDRAW PUG FARMS\n\n  async withdraw_pug_ewt_clp(e) {\n    if (this.state.depo_clp_pug_ewt_amount_precision > 0) {\n      const user_farm_0 = await this.state.pMasterChef.methods\n        .userInfo(0, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_0.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"200000\");\n\n      const ammoAddress = this.state.ammoAddress;\n      const currentAmmoBalance = await this.state.ammo.methods\n        .balanceOf(this.state.account)\n        .call();\n      const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n\n      e.preventDefault();\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //* FEE (PUG)\n          await this.state.pug.methods.transfer(gFeeAddress, fee).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n\n          await this.state.pMasterChef.methods\n            .withdraw(0, withdraw)\n            .send({ from: this.state.account });\n\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  async withdraw_pug_susu_clp(e) {\n    if (this.state.depo_clp_pug_susu_amount_precision > 0) {\n      const user_farm_1 = await this.state.pMasterChef.methods\n        .userInfo(1, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_1.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const ammoAddress = this.state.ammoAddress;\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"200000\");\n      const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n\n      const currentAmmoBalance = await this.state.ammo.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          ///* FEE (PUG)\n          await this.state.pug.methods.transfer(gFeeAddress, fee).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n\n          await this.state.pMasterChef.methods\n            .withdraw(1, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  async withdraw_pug_usdc_clp(e) {\n    if (this.state.depo_clp_pug_usdc_amount_precision > 0) {\n      const user_farm_2 = await this.state.pMasterChef.methods\n        .userInfo(2, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_2.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const ammoAddress = this.state.ammoAddress;\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"200000\");\n      const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n\n      const currentAmmoBalance = await this.state.ammo.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //* FEE (PUG)\n          await this.state.pug.methods.transfer(gFeeAddress, fee).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n\n          await this.state.pMasterChef.methods\n            .withdraw(2, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  async withdraw_pug_bnb_clp(e) {\n    if (this.state.depo_clp_pug_bnb_amount_precision > 0) {\n      const user_farm_3 = await this.state.pMasterChef.methods\n        .userInfo(3, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_3.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const ammoAddress = this.state.ammoAddress;\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"200000\");\n      const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n\n      const currentAmmoBalance = await this.state.ammo.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //* FEE (PUG)\n          await this.state.pug.methods.transfer(gFeeAddress, fee).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n\n          await this.state.pMasterChef.methods\n            .withdraw(3, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  async withdraw_pug_slr_clp(e) {\n    if (this.state.depo_clp_pug_slr_amount_precision > 0) {\n      const user_farm_4 = await this.state.pMasterChef.methods\n        .userInfo(4, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_4.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const ammoAddress = this.state.ammoAddress;\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"200000\");\n      const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n\n      const currentAmmoBalance = await this.state.ammo.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //* FEE (PUG)\n          // await this.state.pug.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods\n            .withdraw(4, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  async withdraw_pug_ammo_clp(e) {\n    if (this.state.depo_clp_pug_ammo_amount_precision > 0) {\n      const user_farm_5 = await this.state.pMasterChef.methods\n        .userInfo(5, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_5.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const ammoAddress = this.state.ammoAddress;\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"200000\");\n      const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n\n      const currentAmmoBalance = await this.state.ammo.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //* FEE (PUG)\n          // await this.state.pug.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.pMasterChef.methods\n            .withdraw(5, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  //! END: WITHDRAW IN FARMS\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //*Globals\n      web3: \"undefined\",\n      pMasterChef: null,\n      netId: null,\n      ammoFeeAddress: null,\n      //TODO: AQUI\n      gFeeAddress: null,\n      //?UserGlobals\n      account: \"\",\n      ewt_balance: 0,\n      //!Balances\n\n      //* AMMO_USDC\n      //TODO: AQUI\n      ammo_usdc_clp_wallet_balance: 0,\n      reward_ammo_usdc_pdt_gs: 0.0,\n      reward_ammo_usdc_pdt_gs_precision: 0.0,\n      depo_clp_ammo_usdc_amount: 0,\n      input_lp_ammo_usdc: 0,\n\n      //* GS_USDC\n      //TODO: AQUI\n      gs_usdc_clp_wallet_balance: 0,\n      reward_gs_usdc_pdt_gs: 0.0,\n      reward_gs_usdc_pdt_gs_precision: 0.0,\n      depo_clp_gs_usdc_amount: 0,\n      input_lp_gs_usdc: 0,\n\n      //* PUG_EWT\n      pug_ewt_clp_wallet_balance: 0,\n      reward_pug_ewt_pdt_ammo: 0.0,\n      depo_clp_pug_ewt_amount: 0,\n      input_lp_pug_ewt: 0,\n\n      //* PUG_SUSU\n      pug_susu_clp_wallet_balance: 0,\n      reward_pug_susu_pdt_ammo: 0.0,\n      depo_clp_ammo_usdc_amount: 0,\n      input_lp_pug_susu: 0,\n\n      //* PUG_USDC\n      pug_usdc_clp_wallet_balance: 0,\n      reward_pug_usdc_pdt_ammo: 0.0,\n      depo_clp_pug_usdc_amount: 0,\n      input_lp_pug_usdc: 0,\n\n      //* PUG_BNB\n      pug_bnb_clp_wallet_balance: 0,\n      reward_pug_bnb_pdt_ammo: 0.0,\n      depo_clp_pug_bnb_amount: 0,\n      input_lp_pug_bnb: 0,\n\n      //* PUG_SLR\n      pug_slr_clp_wallet_balance: 0,\n      reward_pug_slr_pdt_ammo: 0.0,\n      depo_clp_pug_slr_amount: 0,\n      input_lp_pug_slr: 0,\n\n      //* PUG_AMMO\n      pug_ammo_clp_wallet_balance: 0,\n      reward_pug_ammo_pdt_ammo: 0.0,\n      depo_clp_pug_ammo_amount: 0,\n      input_lp_pug_ammo: 0,\n\n      //! Contracts&Addresses\n      farmContracts: [],\n      //TODO: AQUI\n      gfarmContracts: [],\n      ammo: null,\n      gs: null,\n      pmasterChefAddress: null,\n      //TODO: AQUI\n      gmasterChefAddress: null,\n\n      //?* State Management\n      pair: null,\n    };\n  }\n\n  ChangeCLP_AMMO_USDC_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_ammo_usdc: this.state.ammo_usdc_clp_wallet_balance,\n      });\n    } else {\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n      this.setState({ input_lp_ammo_usdc: event.target.value });\n    }\n  };\n\n  ChangeCLP_GS_USDC_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_gs_usdc: this.state.gs_usdc_clp_wallet_balance,\n      });\n    } else {\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n      this.setState({ input_lp_gs_usdc: event.target.value });\n    }\n  };\n\n  ChangeCLP_PUG_EWT_Amount = (event) => {\n    console.log(event.target.value == undefined);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_pug_ewt: this.state.pug_ewt_clp_wallet_balance,\n      });\n    } else {\n      this.setState({ input_lp_pug_ewt: event.target.value });\n    }\n  };\n\n  ChangeCLP_PUG_SUSU_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_pug_susu: this.state.pug_susu_clp_wallet_balance,\n      });\n    } else {\n      this.setState({ input_lp_pug_susu: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n\n  ChangeCLP_PUG_USDC_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_pug_usdc: this.state.pug_usdc_clp_wallet_balance,\n      });\n    } else {\n      this.setState({ input_lp_pug_usdc: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n\n  ChangeCLP_PUG_BNB_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_pug_bnb: this.state.pug_bnb_clp_wallet_balance,\n      });\n    } else {\n      this.setState({ input_lp_pug_bnb: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n\n  ChangeCLP_PUG_SLR_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_pug_slr: this.state.pug_slr_clp_wallet_balance,\n      });\n    } else {\n      this.setState({ input_lp_pug_slr: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n\n  ChangeCLP_PUG_AMMO_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_lp_pug_ammo: this.state.pug_ammo_clp_wallet_balance,\n      });\n    } else {\n      this.setState({ input_lp_pug_ammo: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n\n  //*Navigation\n\n  //* END: Navigation\n\n  render() {\n    return (\n      <div>\n        <div className=\"root\">\n          <br></br>\n          <div className=\"page\" style={{ background: \"black\" }}>\n            <br></br>\n            <br></br>\n            <div class=\"pot-banner\">\n              <div class=\"wrapper\">\n                <div class=\"banner-wrapper\">\n                  <div class=\"txt-wrapper\">\n                    <span class=\"title\">\n                      G<font size=\"+3\">angster</font> F\n                      <font size=\"+3\">arming</font>\n                    </span>\n                    <span class=\"sub-title\">\n                      <font color=\"white\">\n                        The G$wap Farming is for those who support @mobpug\n                        ($PUG) from the begining. Gangsters take care of other\n                        Gangsters, at least, since I'm Pug Father, I do.\n                      </font>\n                    </span>\n                    <br></br>\n                    <div align=\"center\"></div>\n                    {farm_opening - Date.now() >= 0 ? (\n                      <div align=\"center\">\n                        <span class=\"title\" size=\"1\">\n                          <font color=\"ec6998\">\n                            <b>\n                              <i>\n                                \"You can try to Deposit and Withdraw but rewards\n                                will start once the Countdown is over\"\n                              </i>\n                            </b>\n                          </font>\n                        </span>\n                      </div>\n                    ) : (\n                      <div align=\"center\">\n                        <span class=\"title\" size=\"1\">\n                          <font color=\"ec6998\">\n                            <b>\n                              <i>\n                                \"Every time you Deposit or Withdraw Rewards will\n                                be Harvest\"\n                              </i>\n                            </b>\n                          </font>\n                        </span>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"page-content\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div class=\"container pg\">\n                <div class=\"farms-list-wrapper\">\n                  {/* FIRST FARM */}\n                  {/* TODO: AQUI */}\n                  {/* G$ - USDC FARM */}\n\n                  <main role=\"main\" className=\"farm-list\">\n                    <div class=\"ewt_balance\" align=\"left\">\n                      <span class=\"label\">\n                        <font color=\"ec6998\">\n                          <b>\n                            WALLET <font color=\"white\"></font> BALANCE:\n                          </b>\n                        </font>{\" \"}\n                      </span>\n                      {/* TODO: AQUI */}\n                      <span class=\"value\">\n                        <font color=\"white\">\n                          {this.state.gs_usdc_clp_wallet_balance}\n                        </font>\n                      </span>\n                    </div>\n\n                    <div class=\"row\">\n                      <div class=\"farms-card-item clickable boost-subimp\">\n                        <div class=\"icon\">\n                          <div\n                            class=\"card-icon no-select\"\n                            style={{\n                              height: \"120px\",\n                              width: \"120px\",\n                            }}\n                          >\n                            <img src={gsUsdc} alt=\"icon\" />\n                          </div>\n                        </div>\n                        <div></div>\n                        <div\n                          class=\"label\"\n                          style={{\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <span>\n                            <font color=\"white\">G</font>\n                            <i>$</i>\n                            <font color=\"white\">-USDC</font>\n                          </span>{\" \"}\n                          <span>\n                            <font color=\"white\" size=\"1\">\n                              G\n                            </font>\n                            <font color=\"fe1e70\" size=\"1\">\n                              <i>$wap Booster</i>\n                            </font>\n                          </span>\n                        </div>\n                        <div class=\"rates\">\n                          <span class=\"apy\">\n                            {/* TODO: REMOVE THIS AND UNCOMMENT OTHER */}\n\n                            {/* TODO: AQUI */}\n\n                            {this.state.reward_gs_usdc_pdt_gs_precision <\n                            0.000001 ? (\n                              <font>\n                                {this.state.gs_usdc_supply_apy}\n                                <i>\n                                  <font size=\"+1\">%</font>\n                                </i>\n                              </font>\n                            ) : (\n                              <font>\n                                <font>{this.state.reward_gs_usdc_pdt_gs}</font>{\" \"}\n                                G\n                                <i>\n                                  <font size=\"+1\">$</font>\n                                </i>\n                              </font>\n                            )}\n                          </span>\n                          {this.state.reward_gs_usdc_pdt_gs_precision <=\n                          0.000001 ? (\n                            <span class=\"apr\">\n                              <font>\n                                <font size=\"+1\">\n                                  <i>APY</i>\n                                </font>\n                              </font>\n                              {/* {this.state.reward_ammo_usdc_pdt_gs == 0 ? (\n                              <font>\n                                <font size=\"+1\">\n                                  <i>APY</i>\n                                </font>\n                              </font>\n                            ) : (\n                              \"\"\n                            )} */}\n                            </span>\n                          ) : (\n                            <span class=\"apr\"></span>\n                          )}\n                        </div>\n                        <div class=\"details return\" align=\"right\">\n                          <div\n                            class=\"bunny-button clickable no-select\"\n                            onClick={(e) => this.withdraw_gs_usdc_clp(e)}\n                          >\n                            <div class=\"content\">\n                              <font\n                                color={\n                                  this.state.depo_clp_gs_usdc_amount >=\n                                  0.0000001\n                                    ? \"white\"\n                                    : \"gray\"\n                                }\n                              >\n                                WITHDRAW\n                              </font>\n\n                              <font size=\"1\">\n                                + G\n                                <i>\n                                  <font color=\"ec6998\">$</font>\n                                </i>\n                              </font>\n                              <div class=\"subfont\"></div>\n                            </div>\n                          </div>\n                        </div>\n                        <div class=\"details total\" align=\"right\">\n                          <span class=\"label\">Deposited:</span>\n                          <span class=\"value\">\n                            {this.state.depo_clp_gs_usdc_amount} {gs_pair_1}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                    <br></br>\n                  </main>\n                  {/* Operating BOX */}\n                  <div\n                    class=\"token-input\"\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    {/* TODO: AQUI */}\n\n                    <div class=\"token-input-wrapper\" style={{ width: \"55%\" }}>\n                      <input\n                        class=\"token-input\"\n                        placeholder={\n                          this.state.input_lp_gs_usdc == 0\n                            ? \"0.0\"\n                            : this.state.input_lp_gs_usdc\n                        }\n                        onChange={this.ChangeCLP_GS_USDC_Amount}\n                      />\n                      <span class=\"token-input-symbol no-select\">\n                        {gs_pair_1} CLP\n                      </span>\n                      <div\n                        class=\"token-input-max clickable\"\n                        onClick={(e) => this.ChangeCLP_GS_USDC_Amount(e)}\n                      >\n                        MAX\n                      </div>\n                    </div>\n                  </div>\n                  <br />\n                  {/* TODO: AQUI */}\n\n                  <div class=\"card-content\">\n                    <div\n                      class=\"farm-detail-control-action-wrapper\"\n                      style={{ height: \"5px\" }}\n                    >\n                      <div class=\"row\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) =>\n                            this.deposit_gs_usdc_clp(\n                              this.state.input_lp_gs_usdc\n                            )\n                          }\n                        >\n                          <div class=\"content\">\n                            <font color=\"white\">DEPOSIT</font>\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {/* EWT-PUG FARM */}\n                  <div class=\"ewt_balance\" align=\"left\">\n                    <span class=\"label\">\n                      <font color=\"purple\">\n                        <b>\n                          WALLET <font color=\"white\"></font> BALANCE:\n                        </b>\n                      </font>{\" \"}\n                    </span>\n                    <span class=\"value\">\n                      <font color=\"white\">\n                        {this.state.pug_ewt_clp_wallet_balance}\n                      </font>\n                    </span>\n                  </div>\n\n                  <div class=\"section staked\">\n                    <div class=\"wrapper_important_pairs\">\n                      <main role=\"main\" className=\"farm-list\">\n                        <div class=\"row\">\n                          <div class=\"farms-card-item clickable boost undefined\">\n                            <div class=\"icon\">\n                              <div\n                                class=\"card-icon no-select\"\n                                style={{ height: \"120px\", width: \"120px\" }}\n                              >\n                                <img src={pugEwtt} alt=\"icon\" />\n                              </div>\n                            </div>\n                            <div></div>\n                            <div\n                              class=\"label\"\n                              style={{\n                                alignItems: \"center\",\n                              }}\n                            >\n                              <span>\n                                <i>$</i>\n                                <font color=\"white\">{pair_0}</font>\n                              </span>{\" \"}\n                              <span>\n                                <font color=\"white\" size=\"1\"></font>\n                                <font color=\"800080\" size=\"1\">\n                                  <i>PUG Father Choice</i>\n                                </font>\n                              </span>\n                            </div>\n                            <div class=\"rates\">\n                              <span class=\"apy\">\n                                {this.state.reward_pug_ewt_pdt_ammo == 0 ? (\n                                  <font>\n                                    {this.state.pug_ewt_apy}\n                                    <i>\n                                      <font size=\"+1\">%</font>\n                                    </i>\n                                  </font>\n                                ) : (\n                                  <font>\n                                    <font>\n                                      <i>$</i>\n                                      {this.state.reward_pug_ewt_pdt_ammo}\n                                    </font>\n                                  </font>\n                                )}\n                              </span>\n                              <span class=\"apr\">\n                                {this.state.reward_pug_ewt_pdt_ammo == 0 ? (\n                                  <font>\n                                    <font size=\"+1\">\n                                      <i>APY</i>\n                                    </font>\n                                  </font>\n                                ) : (\n                                  \"AMMO\"\n                                )}\n                              </span>\n                            </div>\n                            {/* Withdraw PUG-EWT */}\n                            <div class=\"details return\" align=\"right\">\n                              <div\n                                class=\"bunny-button clickable no-select\"\n                                onClick={(e) => this.withdraw_pug_ewt_clp(e)}\n                              >\n                                <div class=\"content\">\n                                  <font\n                                    color={\n                                      this.state.depo_clp_pug_ewt_amount >=\n                                      0.0000001\n                                        ? \"white\"\n                                        : \"gray\"\n                                    }\n                                  >\n                                    WITHDRAW\n                                  </font>\n\n                                  <font size=\"1\">\n                                    + <i>$</i>AMMO\n                                  </font>\n                                  <div class=\"subfont\"></div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"details total\" align=\"right\">\n                              <span class=\"label\">Deposited:</span>\n                              <span class=\"value\">\n                                {this.state.depo_clp_pug_ewt_amount} EWT-PUG\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <br></br>\n                      </main>\n\n                      {/* Operating BOX */}\n                      <div\n                        class=\"token-input\"\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <div\n                          class=\"token-input-wrapper\"\n                          style={{ width: \"55%\" }}\n                        >\n                          <input\n                            class=\"token-input\"\n                            placeholder={\n                              this.state.input_lp_pug_ewt == 0\n                                ? \"0.0\"\n                                : this.state.input_lp_pug_ewt\n                            }\n                            onChange={this.ChangeCLP_PUG_EWT_Amount}\n                          />\n                          <span class=\"token-input-symbol no-select\">\n                            {pair_0} CLP\n                          </span>\n                          {/* INPUT PUG-EWT */}\n                          <div\n                            class=\"token-input-max clickable\"\n                            onClick={(e) => this.ChangeCLP_PUG_EWT_Amount(e)}\n                          >\n                            MAX\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    <div\n                      class=\"farm-detail-control-action-wrapper\"\n                      style={{ height: \"5px\" }}\n                    >\n                      <div class=\"row\">\n                        {/* DEPOSIT PUG-EWT */}\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) =>\n                            this.deposit_pug_ewt_clp(\n                              this.state.input_lp_pug_ewt\n                            )\n                          }\n                        >\n                          <div class=\"content\">\n                            <font color=\"white\">DEPOSIT</font>\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* PUG-SUSU FARM*/}\n                    <main role=\"main\" className=\"farm-list\">\n                      <div class=\"ewt_balance\" align=\"left\">\n                        <span class=\"label\">\n                          <font color=\"purple\">\n                            <b>\n                              WALLET <font color=\"white\"></font> BALANCE:\n                            </b>\n                          </font>{\" \"}\n                        </span>\n                        <span class=\"value\">\n                          <font color=\"white\">\n                            {this.state.pug_susu_clp_wallet_balance}\n                          </font>\n                        </span>\n                      </div>\n\n                      <div class=\"row\">\n                        <div class=\"farms-card-item clickable boost undefined\">\n                          <div class=\"icon\">\n                            <div\n                              class=\"card-icon no-select\"\n                              style={{ height: \"120px\", width: \"120px\" }}\n                            >\n                              <img src={pugSusu} alt=\"icon\" />\n                            </div>\n                          </div>\n                          <div></div>\n                          <div class=\"label\" align=\"right\">\n                            <span>\n                              $<font color=\"white\">{pair_1}</font>\n                            </span>\n                          </div>\n                          <div class=\"rates\">\n                            <span class=\"apy\">\n                              {this.state.reward_pug_susu_pdt_ammo == 0 ? (\n                                <font>\n                                  {this.state.pug_susu_apy}\n                                  <i>\n                                    <font size=\"+1\">%</font>\n                                  </i>\n                                </font>\n                              ) : (\n                                <font>\n                                  <font>\n                                    <i>$</i>\n                                    {this.state.reward_pug_susu_pdt_ammo}\n                                  </font>\n                                </font>\n                              )}\n                            </span>\n                            <span class=\"apr\">\n                              {this.state.reward_pug_susu_pdt_ammo == 0 ? (\n                                <font>\n                                  <font size=\"+1\">\n                                    <i>APY</i>\n                                  </font>\n                                </font>\n                              ) : (\n                                `$AMMO`\n                              )}\n                            </span>\n                          </div>\n                          <div class=\"details return\" align=\"right\">\n                            {/* Withdraw PUG-SUSU */}\n                            <div\n                              class=\"bunny-button clickable no-select\"\n                              onClick={(e) => this.withdraw_pug_susu_clp(e)}\n                            >\n                              <div class=\"content\">\n                                <font\n                                  color={\n                                    this.state.depo_clp_pug_susu_amount >=\n                                    0.0000001\n                                      ? \"white\"\n                                      : \"gray\"\n                                  }\n                                >\n                                  WITHDRAW\n                                </font>\n\n                                <font size=\"1\">\n                                  + <i>$</i>AMMO\n                                </font>\n                                <div class=\"subfont\"></div>\n                              </div>\n                            </div>\n                          </div>\n                          <div class=\"details total\" align=\"right\">\n                            <span class=\"label\">Deposited:</span>\n                            <span class=\"value\">\n                              {this.state.depo_clp_pug_susu_amount} {pair_1}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <br></br>\n                    </main>\n                    {/* Operating BOX */}\n                    <div\n                      class=\"token-input\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <div class=\"token-input-wrapper\" style={{ width: \"55%\" }}>\n                        <input\n                          class=\"token-input\"\n                          placeholder={\n                            this.state.input_lp_pug_susu == 0\n                              ? \"0.0\"\n                              : this.state.input_lp_pug_susu\n                          }\n                          onChange={this.ChangeCLP_PUG_SUSU_Amount}\n                        />\n                        <span class=\"token-input-symbol no-select\">\n                          {pair_1} CLP\n                        </span>\n                        {/* INPUT PUG-SUSU */}\n                        <div\n                          class=\"token-input-max clickable\"\n                          onClick={(e) => this.ChangeCLP_PUG_SUSU_Amount(e)}\n                        >\n                          MAX\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  <div class=\"card-content\">\n                    <div\n                      class=\"farm-detail-control-action-wrapper\"\n                      style={{ height: \"5px\" }}\n                    >\n                      <div class=\"row\">\n                        {/* Deposit PUG-SUSU */}\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) =>\n                            this.deposit_pug_susu_clp(\n                              this.state.input_lp_pug_susu\n                            )\n                          }\n                        >\n                          <div class=\"content\">\n                            <font color=\"white\">DEPOSIT</font>\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* PUG-AMMO FARM GS */}\n\n                <main role=\"main\" className=\"farm-list\">\n                  <div class=\"ewt_balance\" align=\"left\">\n                    <span class=\"label\">\n                      <font color=\"640b76\">\n                        <b>\n                          WALLET <font color=\"white\"></font> BALANCE:\n                        </b>\n                      </font>{\" \"}\n                    </span>\n                    {/* TODO: AQUI */}\n                    <span class=\"value\">\n                      <font color=\"white\">\n                        {this.state.pug_ammo_clp_wallet_balance}\n                      </font>\n                    </span>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"farms-card-item clickable boost-new\">\n                      <div class=\"icon\">\n                        <div\n                          class=\"card-icon no-select\"\n                          style={{\n                            height: \"120px\",\n                            width: \"120px\",\n                          }}\n                        >\n                          <img src={pugAmmo} alt=\"icon\" />\n                        </div>\n                      </div>\n                      <div></div>\n                      <div\n                        class=\"label\"\n                        style={{\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <span>\n                          <i>$</i>\n                          <font color=\"white\">{pair_6}</font>\n                        </span>\n                        <span>\n                          <font color=\"fe1e70\" size=\"1\">\n                            <i>New </i>\n                          </font>\n                          <font color=\"white\" size=\"1\">\n                            <i>Farm </i>\n                          </font>\n                        </span>\n                      </div>\n                      <div class=\"rates\">\n                        <span class=\"apy\">\n                          {this.state.reward_pug_ammo_pdt_ammo == 0 ? (\n                            <font>\n                              {this.state.pug_ammo_apy}\n                              <i>\n                                <font size=\"+1\">%</font>\n                              </i>\n                            </font>\n                          ) : (\n                            <font>\n                              <font>\n                                <i>$</i>\n                                {this.state.reward_pug_ammo_pdt_ammo}\n                              </font>\n                            </font>\n                          )}\n                        </span>\n                        <span class=\"apr\">\n                          {this.state.reward_pug_ammo_pdt_ammo == 0 ? (\n                            <font>\n                              <font size=\"+1\">\n                                <i>APY</i>\n                              </font>\n                            </font>\n                          ) : (\n                            `AMMO`\n                          )}\n                        </span>\n                      </div>\n                      <div class=\"details return\" align=\"right\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) => this.withdraw_pug_ammo_clp(e)}\n                        >\n                          <div class=\"content\">\n                            <font\n                              color={\n                                this.state.depo_clp_pug_ammo_amount_precision >=\n                                0.0000001\n                                  ? \"white\"\n                                  : \"gray\"\n                              }\n                            >\n                              WITHDRAW\n                            </font>\n\n                            <font size=\"1\">\n                              + <i>$</i>AMMO\n                            </font>\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"details total\" align=\"right\">\n                        <span class=\"label\">Deposited:</span>\n                        <span class=\"value\">\n                          {this.state.depo_clp_pug_ammo_amount} {pair_6}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <br></br>\n                </main>\n                {/* Operating BOX */}\n                <div\n                  class=\"token-input\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {/* TODO: AQUI */}\n                  <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                    <input\n                      class=\"token-input\"\n                      placeholder={\n                        this.state.input_lp_pug_ammo == 0\n                          ? \"0.0\"\n                          : this.state.input_lp_pug_ammo\n                      }\n                      onChange={this.ChangeCLP_PUG_AMMO_Amount}\n                    />\n                    <span class=\"token-input-symbol no-select\">\n                      {pair_6} CLP\n                    </span>\n                    <div\n                      class=\"token-input-max clickable\"\n                      onClick={(e) => this.ChangeCLP_PUG_AMMO_Amount(e)}\n                    >\n                      MAX\n                    </div>\n                  </div>\n                </div>\n                <br />\n                {/* TODO: AQUI */}\n\n                <div class=\"card-content\">\n                  <div\n                    class=\"farm-detail-control-action-wrapper\"\n                    style={{ height: \"5px\" }}\n                  >\n                    <div class=\"row\">\n                      <div\n                        class=\"bunny-button clickable no-select\"\n                        onClick={(e) =>\n                          this.deposit_pug_ammo_clp(\n                            this.state.input_lp_pug_ammo\n                          )\n                        }\n                      >\n                        <div class=\"content\">\n                          <font color=\"white\">DEPOSIT</font>\n                          <div class=\"subfont\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* SLR-PUG FARM GS */}\n\n                <main role=\"main\" className=\"farm-list\">\n                  <div class=\"ewt_balance\" align=\"left\">\n                    <span class=\"label\">\n                      <font color=\"640b76\">\n                        <b>\n                          WALLET <font color=\"white\"></font> BALANCE:\n                        </b>\n                      </font>{\" \"}\n                    </span>\n                    {/* TODO: AQUI */}\n                    <span class=\"value\">\n                      <font color=\"white\">\n                        {this.state.pug_slr_clp_wallet_balance}\n                      </font>\n                    </span>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"farms-card-item clickable boost-new\">\n                      <div class=\"icon\">\n                        <div\n                          class=\"card-icon no-select\"\n                          style={{\n                            height: \"120px\",\n                            width: \"120px\",\n                          }}\n                        >\n                          <img src={slrPug} alt=\"icon\" />\n                        </div>\n                      </div>\n                      <div></div>\n                      <div\n                        class=\"label\"\n                        style={{\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <span>\n                          <i>$</i>\n                          <font color=\"white\">{pair_5}</font>\n                        </span>\n                        <span>\n                          <font color=\"fe1e70\" size=\"1\">\n                            <i>New </i>\n                          </font>\n                          <font color=\"white\" size=\"1\">\n                            <i>Farm </i>\n                          </font>\n                        </span>\n                      </div>\n                      <div class=\"rates\">\n                        <span class=\"apy\">\n                          {this.state.reward_pug_slr_pdt_ammo == 0 ? (\n                            <font>\n                              {this.state.pug_slr_apy}\n                              <i>\n                                <font size=\"+1\">%</font>\n                              </i>\n                            </font>\n                          ) : (\n                            <font>\n                              <font>\n                                <i>$</i>\n                                {this.state.reward_pug_slr_pdt_ammo}\n                              </font>\n                            </font>\n                          )}\n                        </span>\n                        <span class=\"apr\">\n                          {this.state.reward_pug_slr_pdt_ammo == 0 ? (\n                            <font>\n                              <font size=\"+1\">\n                                <i>APY</i>\n                              </font>\n                            </font>\n                          ) : (\n                            `AMMO`\n                          )}\n                        </span>\n                      </div>\n                      <div class=\"details return\" align=\"right\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) => this.withdraw_pug_slr_clp(e)}\n                        >\n                          <div class=\"content\">\n                            <font\n                              color={\n                                this.state.depo_clp_pug_slr_amount >= 0.0000001\n                                  ? \"white\"\n                                  : \"gray\"\n                              }\n                            >\n                              WITHDRAW\n                            </font>\n\n                            <font size=\"1\">\n                              + <i>$</i>AMMO\n                            </font>\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"details total\" align=\"right\">\n                        <span class=\"label\">Deposited:</span>\n                        <span class=\"value\">\n                          {this.state.depo_clp_pug_slr_amount} {pair_5}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <br></br>\n                </main>\n                {/* Operating BOX */}\n                <div\n                  class=\"token-input\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {/* TODO: AQUI */}\n                  <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                    <input\n                      class=\"token-input\"\n                      placeholder={\n                        this.state.input_lp_pug_slr == 0\n                          ? \"0.0\"\n                          : this.state.input_lp_pug_slr\n                      }\n                      onChange={this.ChangeCLP_PUG_SLR_Amount}\n                    />\n                    <span class=\"token-input-symbol no-select\">\n                      {pair_5} CLP\n                    </span>\n                    <div\n                      class=\"token-input-max clickable\"\n                      onClick={(e) => this.ChangeCLP_PUG_SLR_Amount(e)}\n                    >\n                      MAX\n                    </div>\n                  </div>\n                </div>\n                <br />\n                {/* TODO: AQUI */}\n\n                <div class=\"card-content\">\n                  <div\n                    class=\"farm-detail-control-action-wrapper\"\n                    style={{ height: \"5px\" }}\n                  >\n                    <div class=\"row\">\n                      <div\n                        class=\"bunny-button clickable no-select\"\n                        onClick={(e) =>\n                          this.deposit_pug_slr_clp(this.state.input_lp_pug_slr)\n                        }\n                      >\n                        <div class=\"content\">\n                          <font color=\"white\">DEPOSIT</font>\n                          <div class=\"subfont\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* AMMO-USDC FARM GS */}\n\n                <main role=\"main\" className=\"farm-list\">\n                  <div class=\"ewt_balance\" align=\"left\">\n                    <span class=\"label\">\n                      <font color=\"ec6998\">\n                        <b>\n                          WALLET <font color=\"white\"></font> BALANCE:\n                        </b>\n                      </font>{\" \"}\n                    </span>\n                    {/* TODO: AQUI */}\n                    <span class=\"value\">\n                      <font color=\"white\">\n                        {this.state.ammo_usdc_clp_wallet_balance}\n                      </font>\n                    </span>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"farms-card-item clickable boost-subimp\">\n                      <div class=\"icon\">\n                        <div\n                          class=\"card-icon no-select\"\n                          style={{\n                            height: \"120px\",\n                            width: \"120px\",\n                          }}\n                        >\n                          <img src={ammoUsdc} alt=\"icon\" />\n                        </div>\n                      </div>\n                      <div></div>\n                      <div\n                        class=\"label\"\n                        style={{\n                          alignItems: \"center\",\n                        }}\n                      >\n                        <span>\n                          <i>$</i>\n                          <font color=\"white\">{gs_pair_0}</font>\n                        </span>{\" \"}\n                        <span>\n                          <font color=\"white\" size=\"1\">\n                            G\n                          </font>\n                          <font color=\"fe1e70\" size=\"1\">\n                            <i>$wap Booster</i>\n                          </font>\n                        </span>\n                      </div>\n                      <div class=\"rates\">\n                        <span class=\"apy\">\n                          {/* TODO: REMOVE THIS AND UNCOMMENT OTHER */}\n\n                          {/* TODO: AQUI */}\n\n                          {this.state.reward_ammo_usdc_pdt_gs_precision <\n                          0.000001 ? (\n                            <font>\n                              {this.state.ammo_usdc_supply_apy}\n                              <i>\n                                <font size=\"+1\">%</font>\n                              </i>\n                            </font>\n                          ) : (\n                            <font>\n                              <font>{this.state.reward_ammo_usdc_pdt_gs}</font>{\" \"}\n                              G\n                              <i>\n                                <font size=\"+1\">$</font>\n                              </i>\n                            </font>\n                          )}\n                        </span>\n                        {this.state.reward_ammo_usdc_pdt_gs_precision <=\n                        0.000001 ? (\n                          <span class=\"apr\">\n                            <font>\n                              <font size=\"+1\">\n                                <i>APY</i>\n                              </font>\n                            </font>\n                            {/* {this.state.reward_ammo_usdc_pdt_gs == 0 ? (\n                              <font>\n                                <font size=\"+1\">\n                                  <i>APY</i>\n                                </font>\n                              </font>\n                            ) : (\n                              \"\"\n                            )} */}\n                          </span>\n                        ) : (\n                          <span class=\"apr\"></span>\n                        )}\n                      </div>\n                      <div class=\"details return\" align=\"right\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) => this.withdraw_ammo_usdc_clp(e)}\n                        >\n                          <div class=\"content\">\n                            <font\n                              color={\n                                this.state.depo_clp_ammo_usdc_amount >=\n                                0.0000001\n                                  ? \"white\"\n                                  : \"gray\"\n                              }\n                            >\n                              WITHDRAW\n                            </font>\n\n                            <font size=\"1\">\n                              + G\n                              <i>\n                                <font color=\"ec6998\">$</font>\n                              </i>\n                            </font>\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"details total\" align=\"right\">\n                        <span class=\"label\">Deposited:</span>\n                        <span class=\"value\">\n                          {this.state.depo_clp_ammo_usdc_amount} {gs_pair_0}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <br></br>\n                </main>\n                {/* Operating BOX */}\n                <div\n                  class=\"token-input\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  {/* TODO: AQUI */}\n                  <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                    <input\n                      class=\"token-input\"\n                      placeholder={\n                        this.state.input_lp_ammo_usdc == 0\n                          ? \"0.0\"\n                          : this.state.input_lp_ammo_usdc\n                      }\n                      onChange={this.ChangeCLP_AMMO_USDC_Amount}\n                    />\n                    <span class=\"token-input-symbol no-select\">\n                      {gs_pair_0} CLP\n                    </span>\n                    <div\n                      class=\"token-input-max clickable\"\n                      onClick={(e) => this.ChangeCLP_AMMO_USDC_Amount(e)}\n                    >\n                      MAX\n                    </div>\n                  </div>\n                </div>\n                <br />\n                {/* TODO: AQUI */}\n\n                <div class=\"card-content\">\n                  <div\n                    class=\"farm-detail-control-action-wrapper\"\n                    style={{ height: \"5px\" }}\n                  >\n                    <div class=\"row\">\n                      <div\n                        class=\"bunny-button clickable no-select\"\n                        onClick={(e) =>\n                          this.deposit_ammo_usdc_clp(\n                            this.state.input_lp_ammo_usdc\n                          )\n                        }\n                      >\n                        <div class=\"content\">\n                          <font color=\"white\">DEPOSIT</font>\n                          <div class=\"subfont\"></div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                {/* USDC-PUG FARM */}\n\n                <main role=\"main\" className=\"farm-list\">\n                  <div class=\"ewt_balance\" align=\"left\">\n                    <span class=\"label\">\n                      <font color=\"ec6998\">\n                        <b>\n                          WALLET <font color=\"white\"></font> BALANCE:\n                        </b>\n                      </font>{\" \"}\n                    </span>\n                    <span class=\"value\">\n                      <font color=\"white\">\n                        {this.state.pug_usdc_clp_wallet_balance}\n                      </font>\n                    </span>\n                  </div>\n\n                  <div class=\"row\">\n                    <div class=\"farms-card-item\">\n                      <div class=\"icon\">\n                        <div\n                          class=\"card-icon no-select\"\n                          style={{ height: \"120px\", width: \"120px\" }}\n                        >\n                          <img src={pugUsdc} alt=\"icon\" />\n                        </div>\n                      </div>\n                      <div></div>\n                      <div class=\"label\" align=\"right\">\n                        <span>\n                          $<font color=\"white\">{pair_3}</font>\n                        </span>{\" \"}\n                      </div>\n                      <div class=\"rates\">\n                        <span class=\"apy\">\n                          {this.state.reward_pug_usdc_pdt_ammo == 0 ? (\n                            <font>\n                              {this.state.pug_usdc_apy}\n                              <i>\n                                <font size=\"+1\">%</font>\n                              </i>\n                            </font>\n                          ) : (\n                            <font>\n                              <font>\n                                <i>$</i>\n                                {this.state.reward_pug_usdc_pdt_ammo}\n                              </font>\n                            </font>\n                          )}\n                        </span>\n                        <span class=\"apr\">\n                          {this.state.reward_pug_usdc_pdt_ammo == 0 ? (\n                            <font>\n                              <font size=\"+1\">\n                                <i>APY</i>\n                              </font>\n                            </font>\n                          ) : (\n                            `AMMO`\n                          )}\n                        </span>\n                      </div>\n                      <div class=\"details return\" align=\"right\">\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) => this.withdraw_pug_usdc_clp(e)}\n                        >\n                          <div class=\"content\">\n                            <font\n                              color={\n                                this.state.depo_clp_pug_usdc_amount >= 0.0000001\n                                  ? \"white\"\n                                  : \"gray\"\n                              }\n                            >\n                              WITHDRAW\n                            </font>\n\n                            <font size=\"1\">\n                              + <i>$</i>AMMO\n                            </font>\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"details total\" align=\"right\">\n                        <span class=\"label\">Deposited:</span>\n                        <span class=\"value\">\n                          {this.state.depo_clp_pug_usdc_amount} {pair_3}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <br></br>\n                </main>\n                {/* Operating BOX */}\n                <div\n                  class=\"token-input\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                    <input\n                      class=\"token-input\"\n                      placeholder={\n                        this.state.input_lp_pug_usdc == 0\n                          ? \"0.0\"\n                          : this.state.input_lp_pug_usdc\n                      }\n                      onChange={this.ChangeCLP_PUG_USDC_Amount}\n                    />\n                    <span class=\"token-input-symbol no-select\">\n                      {pair_3} CLP\n                    </span>\n                    <div\n                      class=\"token-input-max clickable\"\n                      onClick={(e) => this.ChangeCLP_PUG_USDC_Amount(e)}\n                    >\n                      MAX\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"card-content\">\n                <div\n                  class=\"farm-detail-control-action-wrapper\"\n                  align=\"center\"\n                  style={{ height: \"5px\" }}\n                >\n                  <div class=\"row\">\n                    <div\n                      class=\"bunny-button clickable no-select\"\n                      onClick={(e) =>\n                        this.deposit_pug_usdc_clp(this.state.input_lp_pug_usdc)\n                      }\n                    >\n                      <div class=\"content\" align=\"center\">\n                        <font color=\"white\">DEPOSIT</font>\n                        <div class=\"subfont\"></div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* WBNB-PUG FARM */}\n\n            <main role=\"main\" className=\"farm-list\">\n              <div class=\"ewt_balance\" align=\"left\">\n                <span class=\"label\">\n                  <font color=\"ec6998\">\n                    <b>\n                      WALLET <font color=\"white\"></font> BALANCE:\n                    </b>\n                  </font>{\" \"}\n                </span>\n                <span class=\"value\">\n                  <font color=\"white\">\n                    {this.state.pug_bnb_clp_wallet_balance}\n                  </font>\n                </span>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"farms-card-item\">\n                  <div class=\"icon\">\n                    <div\n                      class=\"card-icon no-select\"\n                      style={{ height: \"120px\", width: \"120px\" }}\n                    >\n                      <img src={pugBnb} alt=\"icon\" />\n                    </div>\n                  </div>\n                  <div></div>\n                  <div class=\"label\" align=\"right\">\n                    <span>\n                      $<font color=\"white\">{pair_4}</font>\n                    </span>{\" \"}\n                  </div>\n                  <div class=\"rates\">\n                    <span class=\"apy\">\n                      {this.state.reward_pug_bnb_pdt_ammo == 0 ? (\n                        <font>\n                          {this.state.pug_bnb_apy}\n                          <i>\n                            <font size=\"+1\">%</font>\n                          </i>\n                        </font>\n                      ) : (\n                        <font>\n                          <font>\n                            <i>$</i>\n                            {this.state.reward_pug_bnb_pdt_ammo}\n                          </font>\n                        </font>\n                      )}\n                    </span>\n                    <span class=\"apr\">\n                      {this.state.reward_pug_bnb_pdt_ammo == 0 ? (\n                        <font>\n                          <font size=\"+1\">\n                            <i>APY</i>\n                          </font>\n                        </font>\n                      ) : (\n                        `$AMMO`\n                      )}\n                    </span>\n                  </div>\n                  <div class=\"details return\" align=\"right\">\n                    <div\n                      class=\"bunny-button clickable no-select\"\n                      onClick={(e) => this.withdraw_pug_bnb_clp(e)}\n                    >\n                      <div class=\"content\">\n                        <font\n                          color={\n                            this.state.depo_clp_pug_bnb_amount >= 0.0000001\n                              ? \"white\"\n                              : \"gray\"\n                          }\n                        >\n                          WITHDRAW\n                        </font>\n\n                        <font size=\"1\">\n                          + <i>$</i>AMMO\n                        </font>\n                        <div class=\"subfont\"></div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"details total\" align=\"right\">\n                    <span class=\"label\">Deposited:</span>\n                    <span class=\"value\">\n                      {this.state.depo_clp_pug_bnb_amount} {pair_4}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <br></br>\n            </main>\n            {/* Operating BOX */}\n            <div\n              class=\"token-input\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                <input\n                  class=\"token-input\"\n                  placeholder={\n                    this.state.input_lp_pug_bnb == 0\n                      ? \"0.0\"\n                      : this.state.input_lp_pug_bnb\n                  }\n                  onChange={this.ChangeCLP_PUG_BNB_Amount}\n                />\n                <span class=\"token-input-symbol no-select\">{pair_4} CLP</span>\n                <div\n                  class=\"token-input-max clickable\"\n                  onClick={(e) => this.ChangeCLP_PUG_BNB_Amount(e)}\n                >\n                  MAX\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-content\">\n              <div\n                class=\"farm-detail-control-action-wrapper\"\n                align=\"center\"\n                style={{ height: \"5px\" }}\n              >\n                <div class=\"row\">\n                  <div\n                    class=\"bunny-button clickable no-select\"\n                    onClick={(e) =>\n                      this.deposit_pug_bnb_clp(this.state.input_lp_pug_bnb)\n                    }\n                  >\n                    <div class=\"content\" align=\"center\">\n                      <font color=\"white\">DEPOSIT</font>\n                      <div class=\"subfont\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* EXTRA COMMENT END */}\n            <br></br>\n            <div class=\"container pg\">\n              <div\n                class=\"pot-list\"\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <div\n                  class=\"pot-item empty\"\n                  style={{ width: \"90%\", height: \"70%\" }}\n                >\n                  <img src={gngLotto} alt=\"cooking\" />\n                  <font color=\"grey\">\n                    <span>More Coming Soon</span>\n                  </font>\n                  <font color=\"grey\">\n                    <span>If you want to add a New Pair,</span>\n                    <span>\n                      <font color=\"fe1e70\"> Contact G$wap Devs</font>\n                    </span>\n                  </font>\n                </div>\n              </div>\n            </div>\n            <br></br>\n            {/* WBNB-PUG FARM */}\n\n            {/* <main role=\"main\" className=\"farm-list\">\n              <div class=\"ewt_balance\" align=\"left\">\n                <span class=\"label\">\n                  <font color=\"ec6998\">\n                    <b>\n                      WALLET <font color=\"white\"></font> BALANCE:\n                    </b>\n                  </font>{\" \"}\n                </span>\n                <span class=\"value\">\n                  <font color=\"white\">\n                    {this.state.pug_susu_clp_wallet_balance}\n                  </font>\n                </span>\n              </div>\n\n              <div class=\"row\">\n                <div class=\"farms-card-item\">\n                  <div class=\"icon\">\n                    <div\n                      class=\"card-icon no-select\"\n                      style={{ height: \"120px\", width: \"120px\" }}\n                    >\n                      <img src={ammoPug} alt=\"icon\" />\n                    </div>\n                  </div>\n                  <div></div>\n                  <div class=\"label\" align=\"right\">\n                    <span>\n                      $<font color=\"white\">{pair_5}</font>\n                    </span>\n                  </div>\n                  <div class=\"rates\">\n                    <span class=\"apy\">\n                      {this.state.reward_pug_susu_pdt_ammo == 0\n                        ? \"$AMMO\"\n                        : `$${this.state.reward_pug_susu_pdt_ammo}`}\n                    </span>\n                    <span class=\"description\">\n                      {this.state.reward_pug_susu_pdt_ammo == 0 ? \"Earn\" : `$AMMO`}\n                    </span>\n                  </div>\n                  <div class=\"details return\" align=\"right\">\n                    <div\n                      class=\"bunny-button clickable no-select\"\n                      onClick={(e) => this.withdraw_pug_susu_clp(e)}\n                    >\n                      <div class=\"content\">\n                        <font\n                          color={\n                            this.state.depo_clp_ammo_usdc_amount != 0\n                              ? \"white\"\n                              : \"gray\"\n                          }\n                        >\n                          WITHDRAW\n                        </font>\n                        <div class=\"subfont\"></div>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"details total\" align=\"right\">\n                    <span class=\"label\">Deposited:</span>\n                    <span class=\"value\">\n                      {this.state.depo_clp_ammo_usdc_amount} {pair_5}\n                    </span>\n                  </div>\n                </div>\n              </div>\n              <br></br>\n            </main> */}\n            {/* Operating BOX */}\n            {/* <div\n              class=\"token-input\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <div class=\"token-input-wrapper\" style={{ width: \"75%\" }}>\n                <input\n                  class=\"token-input\"\n                  placeholder={\n                    this.state.input_lp_pug_susu == 0\n                      ? \"0.0\"\n                      : this.state.input_lp_pug_susu\n                  }\n                  onChange={this.ChangeCLP_PUG_SUSU_Amount}\n                />\n                <span class=\"token-input-symbol no-select\">{pair_5} CLP</span>\n                <div\n                  class=\"token-input-max clickable\"\n                  onClick={(e) => this.ChangeCLP_PUG_SUSU_Amount(e)}\n                >\n                  MAX\n                </div>\n              </div>\n            </div>\n\n            <div class=\"card-content\">\n              <div\n                class=\"farm-detail-control-action-wrapper\"\n                align=\"center\"\n                style={{ height: \"5px\" }}\n              >\n                <div class=\"row\">\n                  <div\n                    class=\"bunny-button clickable no-select\"\n                    onClick={(e) =>\n                      this.deposit_pug_susu_clp(this.state.input_lp_pug_susu)\n                    }\n                  >\n                    <div class=\"content\" align=\"center\">\n                      <font color=\"white\">DEPOSIT</font>\n                      <div class=\"subfont\"></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div> */}\n\n            <br></br>\n\n            <br></br>\n\n            <br></br>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nimport { Line, Circle } from \"rc-progress\";\nimport Countdown from \"react-countdown\";\n\nimport Web3 from \"web3\";\n\nimport LotteryContract from \"../../abis/Lottery.json\";\n\n//!AQUI\n// import Token from \"../../abis/SusuToken.json\";\n// import MasterChef from \"../../abis/MasterChef.json\";\n\nimport gangster from \"../assets/gangster.png\";\nimport ewt from \"../assets/ewt.png\";\n// import ammo from \"../assets/ammo.png\";\nimport gngLotto from \"../assets/gngLotto.png\";\nimport gLotto from \"../assets/gLotto.png\";\n\nconst oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n// const startContest_0 = new Date(2021, 6, 27);\nconst startContest_1 = new Date(2021, 6, 28, 5, 30, 0, 0);\n\nconst endContest_0 = new Date(2021, 6, 11, 23, 30, 0, 0);\nconst ended = true;\n// const endContest_0 = new Date(2021, 5, 10, 0, 0, 0, 0);\n// const endContest_1 = new Date(2021, 7, 10);\n\nconst Completionist = () => <span>Time is over, let's check you gLOTTO!</span>;\n\nvar now = Date.now();\n// let dif = 0;\n// let difDate = Math.round(dif / oneDay);\n\nconst renderer_f_0 = ({ hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Render a completed state\n    return <Completionist />;\n  }\n  return (\n    <span>\n      {hours}:{minutes}:{seconds}\n    </span>\n  );\n};\n\nclass Lottery extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    await this.GetLotto_0();\n    //!CARREGAR INITIAL DATA;\n\n    this.setState({});\n  }\n\n  async loadBlockchainData(dispatch) {\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      window.location.reload();\n    });\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      try {\n        window.ethereum.enable().then(function () {\n          // User has allowed account access to DApp...\n        });\n      } catch (e) {\n        // User has denied account access to DApp...\n      }\n      const netId = await web3.eth.net.getId();\n      const lottery = new web3.eth.Contract(\n        LotteryContract.abi,\n        LotteryContract.networks[netId].address\n      );\n      const blockAc = await web3.eth.getBlockNumber();\n      console.log(netId);\n      console.log(`Block: ${blockAc}`);\n      // const algo = await web3.eth.Contract(dbank.abi,dbank.address);\n      // console.log(algo.toString());\n      const accounts = await web3.eth.getAccounts();\n\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n\n          //* Progra Globals\n          web3: web3,\n          netId: netId,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n        const winDisp_0 = await lottery.methods\n          .winnings(this.state.account)\n          .call();\n        winDisp_0 = winDisp_0;\n\n        //!AQUI\n        // const ammoContract = new web3.eth.Contract(\n        //   Token.abi,\n        //   Token.networks[netId].address\n        // );\n        // const ammoAddress = Token.networks[netId].address;\n        // const masterChef = new web3.eth.Contract(\n        //   MasterChef.abi,\n        //   MasterChef.networks[netId].address\n        // );\n        // this.setState({\n        //   winDisp_0: winDisp_0,\n        //   ammo: ammoContract,\n        //   ammoAddress: ammoAddress,\n        //   masterChef: masterChef,\n        // });\n\n        //! AQUI-end-\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n\n  async GetLotto_0() {\n    const lottery = new this.state.web3.eth.Contract(\n      LotteryContract.abi,\n      LotteryContract.networks[this.state.netId].address\n    );\n\n    const leng = await lottery.methods.ticketsLength().call();\n\n    let array = [];\n    let gLotto = 0;\n    let allTickets = 0;\n    let probability = 0;\n    let pot = 0;\n    let win_pot_0 = 0;\n\n    try {\n      for (let index = 0; index < leng; index++) {\n        const participant = await lottery.methods.tickets(index).call();\n        if (participant == this.state.account) {\n          gLotto++;\n        }\n        allTickets++;\n      }\n      pot = await this.state.web3.eth.getBalance(lottery.options.address);\n      pot = await this.state.web3.utils.fromWei(pot);\n      probability = (gLotto / (leng == 0 ? 1 : leng)) * 100;\n      probability = Math.round(probability * 100) / 100;\n    } catch (e) {\n      console.log(e.toString());\n    }\n    this.setState({\n      gLotto_0: gLotto,\n      gLotto_0_probability: probability,\n      gLotto_0_allTickets: allTickets,\n      pot_0: allTickets * 0.5,\n    });\n  }\n\n  async Buy_gLotto_0() {\n    if (ended == false) {\n      const id = await this.state.web3.eth.net.getId();\n      const lottery = new this.state.web3.eth.Contract(\n        LotteryContract.abi,\n        LotteryContract.networks[id].address\n      );\n\n      const buyingAmount = new this.state.web3.utils.BN(\"500000000000000000\");\n      const gas = new this.state.web3.utils.BN(\"99999\");\n      const gasPrice = new this.state.web3.utils.BN(\"1\");\n      try {\n        await lottery.methods.buy().send({\n          from: this.state.account,\n          value: buyingAmount,\n          gas: gas,\n        });\n        window.location.reload();\n      } catch (error) {\n        console.log(error.toString());\n      }\n    }\n  }\n\n  async Withdraw_gLotto_0() {\n    let contest_0_winner;\n    //! Fer call a winner i mirar si es ell\n    //! Si es ell, probar de fer un withdraw\n    if (ended == false) {\n      contest_0_winner = null;\n      this.setState({\n        firstTime: false,\n      });\n    } else {\n      const id = await this.state.web3.eth.net.getId();\n      const lottery = new this.state.web3.eth.Contract(\n        LotteryContract.abi,\n        LotteryContract.networks[id].address\n      );\n\n      try {\n        const resposta = await lottery.methods\n          .winnings(this.state.account)\n          .call();\n        if (resposta != 0) {\n          const gas = new this.state.web3.utils.BN(\"6000000\");\n          const gasPrice = new this.state.web3.utils.BN(\"100000\");\n\n          //!AQUI\n          // const ammoAddress = this.state.ammoAddress;\n          // console.log(ammoAddress);\n          // const currentAmmoBalance = await this.state.ammo.methods\n          //   .balanceOf(this.state.account)\n          //   .call();\n          // const fee = new this.state.web3.utils.BN(\"50000000000000000000\");\n          // const feeAddress = await this.state.masterChef.methods\n          //   .getFeeAddress()\n          //   .call();\n          //!AQUI-end--\n\n          this.setState({ contest_0_winner: true });\n          //* Fee\n          // await this.state.ammo.methods.transfer(feeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await lottery.methods.withdraw().send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n          await this.GetLotto_0();\n        }\n        contest_0_winner = false;\n\n        // console.log(resposta);\n      } catch (error) {\n        console.log(error.toString());\n        this.setState({ contest_0_winner: false });\n      }\n    }\n\n    this.setState({ contest_0_winner: contest_0_winner });\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //? Changable DATA:\n\n      //TODO: Lottery state\n      contest_0_winner: null,\n      account: \"\",\n      web3: \"undefined\",\n      firstTime: true,\n      width: window.innerWidth,\n      //TODO: End Lottery state\n      //   //*Globals\n      //   web3: \"undefined\",\n      //   masterChef: null,\n      //   netId: null,\n      //   feeAddress: null,\n      //   //?UserGlobals\n      //   account: \"\",\n      //   balance: 0,\n      //   //!Balances\n      //   //* PUG_EWT\n      //   ewt_clp_wallet_balance: 0,\n      //   reward_ewt_pdt_ammo: 0.0,\n      //   depo_clp_ewt_amount: 0,\n      //   input_lp_ewt: 0,\n      //   //* PUG_AMMO\n      //   ammo_clp_wallet_balance: 0,\n      //   reward_ammo_pdt_ammo: 0.0,\n      //   depo_clp_ammo_amount: 0,\n      //   input_lp_ammo: 0,\n      //   //! Contracts&Addresses\n      //   farmContracts: [],\n      //   ammo: null,\n      //   masterChefAddress: null,\n      //   //?* State Management\n      //   pair: null,\n    };\n  }\n\n  render() {\n    return (\n      <div class=\"page\" style={{ background: \"black\" }}>\n        NavBar\n        <div class=\"pot-banner\">\n          <div class=\"wrapper\">\n            <div class=\"banner-wrapper\">\n              <div class=\"txt-wrapper\">\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <span class=\"title\">Opening Jackpot</span>\n                <span class=\"sub-title\">\n                  <font color=\"white\">\n                    The G$wap Pot is the first EWC Pot platform. We aim that\n                    every Gangster in the EWC ecosystem be able to make huge\n                    profits by spending small amount. We just want to be the\n                    Gangstest $wap ever created.\n                  </font>\n                </span>\n                <br></br>\n                <div>\n                  <span class=\"title\" align=\"right\">\n                    <font color=\"white\">\n                      <b>\n                        <i>From Gangsters to Gangsters</i>\n                      </b>\n                    </font>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div class=\"container pg\">\n          <div class=\"pot-list\">\n            <div class=\"pot-item farming\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming\">\n                  <font color=\"ec6998\">1 Winner</font>\n                </div>\n                <div class=\"pot-token\">7 DAYS</div>\n              </div>\n\n              <div class=\"title\">\n                <img src={ewt} height=\"100\" width=\"100px\" alt=\"token\" />\n                <br></br>\n\n                <div\n                  class=\"pot-status farming\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <font color=\"ec6998\" align=\"center\">\n                    <br />\n                    <b>\n                      Winner's Pot\n                      <br />\n                    </b>\n                    <font size=\"1\">up to:</font>\n                  </font>\n                </div>\n              </div>\n\n              <span class=\"pot-estimated\">\n                125.000{\" \"}\n                <font color=\"ec6998\" size=\"1\">\n                  EWT\n                </font>\n              </span>\n              {/* <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Open:{\" \"}\n                  <Countdown date={startContest_0} renderer={renderer_i_0} />\n                </span>\n              </span> */}\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposited</div>\n                <div class=\"pot-token\">\n                  <b>\n                    <font color=\"ec6998\">{this.state.pot_0} </font>\n                  </b>{\" \"}\n                  <font size=\"1\">EWT</font>\n                </div>\n              </div>\n\n              {ended != true ? (\n                <div class=\"bunny-button\" onClick={(e) => this.Buy_gLotto_0(e)}>\n                  <div class=\"token-input-max clickable\">\n                    <font color=\"ec6998\">BUY gLOTTO</font>\n                  </div>\n                </div>\n              ) : (\n                <div class=\"bunny-button\">\n                  <div class=\"token-input-max clickable\">\n                    <font color=\"ec6998\">POT CLOSED</font>\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* change */}\n            {this.state.width >= 900 ? (\n              <span class=\"pot-item farming jackpot\" style={{ width: \"200%\" }}>\n                <Line\n                  percent={\n                    this.state.gLotto_0_allTickets / 250000 <= 1\n                      ? \"0.1\"\n                      : this.state.gLotto_0_allTickets / 250000\n                  }\n                  strokeWidth=\"4\"\n                  strokeColor=\"#ec6998\"\n                  trailColor=\"black\"\n                />\n                <div class=\"pot-status-wrapper\"></div>\n                <div class=\"pot-jackpot-title\">\n                  <div class=\"row\">\n                    <div class=\"farms-card-item clickable\">\n                      <div class=\"icon\">\n                        <div\n                          class=\"card-icon no-select\"\n                          style={{ height: \"90px\", width: \"90px\" }}\n                        >\n                          <img src={gLotto} alt=\"icon\" />\n                        </div>\n                      </div>\n                      <div></div>\n                      <div class=\"label\" align=\"right\">\n                        <span>\n                          <font color=\"ec6998\">g</font>\n                          <font color=\"white\">LOTTO</font>\n                        </span>\n                      </div>\n                      <div class=\"algo\">\n                        <div class=\"details return\" align=\"right\">\n                          <div class=\"rates\">\n                            My <font color=\"ec6998\">g</font>LOTTO\n                          </div>\n                          <div class=\"rates\" align=\"right\">\n                            <span class=\"apy\">\n                              <font color=\"ec6998\">\n                                <b>{this.state.gLotto_0}</b>\n                              </font>\n                            </span>\n                          </div>\n                        </div>\n                        <div class=\"details return\" align=\"right\">\n                          <div class=\"rates\">\n                            My <font color=\"ec6998\">g</font>Probability\n                          </div>\n                          <div class=\"rates\" align=\"right\">\n                            <span class=\"apy\">\n                              <font color=\"ec6998\">\n                                <b>{this.state.gLotto_0_probability}</b>%\n                              </font>\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>{/* Operating BOX */}</div>\n                <span class=\"pot-timestamp\">\n                  {ended == true ? (\n                    <div>\n                      <span class=\"pot-timestamp\">\n                        <font color=\"ec6998\">\n                          Time to check if you are the Lucky One\n                        </font>\n                      </span>\n                      <br />\n                      <span\n                        class=\"pot-timestamp\"\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <font size=\"+1\">\n                          G<font color=\"ec6998\">$</font>wap wishes you{\" \"}\n                          <font color=\"ec6998\">g</font>Luck!\n                        </font>\n                      </span>\n                    </div>\n                  ) : (\n                    <span class=\"pot-timestamp\">\n                      Countdown for Pot to be Closed:{\" \"}\n                      <Countdown date={endContest_0} />\n                    </span>\n                  )}\n                </span>\n                <div class=\"pot-divide\"></div>\n                <div class=\"pot-status-wrapper\">\n                  <div class=\"pot-token\">\n                    G\n                    <font color=\"ec6998\">\n                      <b>$</b>\n                    </font>\n                    wap POT:\n                  </div>\n                  <div class=\"pot-token\">\n                    <b>\n                      <font color=\"ec6998\" size=\"+2\">\n                        {this.state.pot_0}{\" \"}\n                      </font>\n                    </b>{\" \"}\n                    <font size=\"1\">EWT</font>\n                  </div>{\" \"}\n                </div>\n\n                <div\n                  class=\"bunny-button default clickable deep-purple \"\n                  style={{ margin: \"10px\" }}\n                  onClick={(e) => this.Withdraw_gLotto_0(e)}\n                >\n                  <br></br>\n                  <div\n                    class=\"bunny-button default clickable select pink\"\n                    onClick={(e) => this.Withdraw_gLotto_0(e)}\n                    style={{ margin: \"10px\" }}\n                  >\n                    <div\n                      class=\"token-input\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <div\n                        class=\"token-input-max clickable\"\n                        onClick={(e) => this.Withdraw_gLotto_0(e)}\n                      >\n                        Try my gLUCK\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  {this.state.contest_0_winner == false && ended == true ? (\n                    <i>\"Sorry, better Luck next time\"</i>\n                  ) : this.state.contest_0_winner == true && ended == true ? (\n                    <i>\"Good Luck, you're a gangster, BUY some $PUG\"</i>\n                  ) : this.state.firstTime == true ? (\n                    <i></i>\n                  ) : (\n                    <i>\n                      \"Pot is not closed yet, buy more to increase your\n                      probability\"\n                    </i>\n                  )}\n                </div>\n              </span>\n            ) : (\n              <span class=\"pot-item farming jackpot\" style={{ width: \"100%\" }}>\n                <Line\n                  percent={\n                    this.state.gLotto_0_allTickets / 250000 <= 1\n                      ? \"0.1\"\n                      : this.state.gLotto_0_allTickets / 250000\n                  }\n                  strokeWidth=\"4\"\n                  strokeColor=\"#ec6998\"\n                  trailColor=\"black\"\n                />\n                <div class=\"pot-status-wrapper\"></div>\n                <div class=\"pot-jackpot-title\">\n                  <div class=\"row\">\n                    <div class=\"farms-card-item clickable\">\n                      <div class=\"icon\">\n                        <div\n                          class=\"card-icon no-select\"\n                          style={{ height: \"90px\", width: \"90px\" }}\n                        >\n                          <img src={gLotto} alt=\"icon\" />\n                        </div>\n                      </div>\n                      <div></div>\n                      <div class=\"label\" align=\"right\">\n                        <span>\n                          <font color=\"ec6998\">g</font>\n                          <font color=\"white\">LOTTO</font>\n                        </span>\n                      </div>\n                      <div class=\"algo\">\n                        <div class=\"details return\" align=\"right\">\n                          <div class=\"rates\">\n                            My <font color=\"ec6998\">g</font>LOTTO\n                          </div>\n                          <div class=\"rates\" align=\"right\">\n                            <span class=\"apy\">\n                              <font color=\"ec6998\">\n                                <b>{this.state.gLotto_0}</b>\n                              </font>\n                            </span>\n                          </div>\n                        </div>\n                        <div class=\"details return\" align=\"right\">\n                          <div class=\"rates\">\n                            My <font color=\"ec6998\">g</font>Probability\n                          </div>\n                          <div class=\"rates\" align=\"right\">\n                            <span class=\"apy\">\n                              <font color=\"ec6998\">\n                                <b>{this.state.gLotto_0_probability}</b>%\n                              </font>\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>{/* Operating BOX */}</div>\n                <span class=\"pot-timestamp\">\n                  {this.state.endContest_0 <= 0 ? (\n                    <div>\n                      <span class=\"pot-timestamp\">\n                        <font color=\"ec6998\">\n                          Time to check if you are the Lucky One\n                        </font>\n                      </span>\n                      <br />\n                      <span\n                        class=\"pot-timestamp\"\n                        style={{\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                        }}\n                      >\n                        <font size=\"+1\">\n                          G<font color=\"ec6998\">$</font>wap wishes you{\" \"}\n                          <font color=\"ec6998\">g</font>Luck!\n                        </font>\n                      </span>\n                    </div>\n                  ) : (\n                    <span class=\"pot-timestamp\">\n                      Countdown for Pot to be Closed:{\" \"}\n                      <Countdown date={endContest_0} />\n                    </span>\n                  )}\n                </span>\n                <div class=\"pot-divide\"></div>\n                <div class=\"pot-status-wrapper\">\n                  <div class=\"pot-token\">\n                    G\n                    <font color=\"ec6998\">\n                      <b>$</b>\n                    </font>\n                    wap POT:\n                  </div>\n                  <div class=\"pot-token\">\n                    <b>\n                      <font color=\"ec6998\" size=\"+2\">\n                        {this.state.pot_0}{\" \"}\n                      </font>\n                    </b>{\" \"}\n                    <font size=\"1\">EWT</font>\n                  </div>{\" \"}\n                </div>\n\n                <div\n                  class=\"bunny-button default clickable deep-purple \"\n                  style={{ margin: \"10px\" }}\n                  onClick={(e) => this.Withdraw_gLotto_0(e)}\n                >\n                  <br></br>\n                  <div\n                    class=\"bunny-button default clickable select pink\"\n                    onClick={(e) => this.Withdraw_gLotto_0(e)}\n                    style={{ margin: \"10px\" }}\n                  >\n                    <div\n                      class=\"token-input\"\n                      style={{\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                      }}\n                    >\n                      <div\n                        class=\"token-input-max clickable\"\n                        onClick={(e) => this.Withdraw_gLotto_0(e)}\n                      >\n                        Try my gLUCK\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div align=\"center\">\n                  {this.state.contest_0_winner == false ? (\n                    <i>\"Sorry, better Luck next time\"</i>\n                  ) : this.state.contest_0_winner == true ? (\n                    <i>\"Good Luck, you're a gangster, BUY some $PUG\"</i>\n                  ) : this.state.firstTime == true ? (\n                    <i></i>\n                  ) : (\n                    <i>\n                      \"Pot is not closed yet, buy more to increase your\n                      probability\"\n                    </i>\n                  )}\n                </div>\n              </span>\n            )}\n            {/* change */}\n          </div>\n        </div>\n        <br></br>\n        {/* <div class=\"container pg\">\n          <div class=\"pot-list\">\n            <div class=\"pot-item farming premium\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming premium\">\n                  <font color=\"ec6998\">1 Winner</font>\n                </div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n\n              <div class=\"title\">\n                <img src={gangster} height=\"100\" width=\"100px\" alt=\"token\" />\n\n                <div\n                  class=\"pot-jackpot premium\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  PUG POT\n                </div>\n              </div>\n\n              <span class=\"pot-estimated\">$74,869.82</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Open: <Countdown date={startContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">284,479.65 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item farming jackpot\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming jackpot\">farming</div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n              <div class=\"pot-jackpot-title\">\n                <img src={gangster} height=\"170px\" width=\"170px\" alt=\"token\" />\n                <span class=\"pot-jackpot jackpot\">BUNNY jackpot</span>\n              </div>\n              <span class=\"pot-estimated\">$38,253.29</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Closes: <Countdown date={endContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">145,349.38 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item empty \">\n              <img src={gngLotto} alt=\"cooking\" />\n              <span>More Coming soon</span>\n              <span>This is just the begining</span>\n            </div>\n          </div>\n        </div> */}\n        <br></br>\n        <div class=\"container pg\">\n          <div\n            class=\"pot-list\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <div class=\"pot-item empty \">\n              <img src={gngLotto} alt=\"cooking\" />\n              <font color=\"grey\">\n                <span>More Coming soon</span>\n              </font>\n              <font color=\"grey\">\n                <span>This is just the beginning</span>{\" \"}\n              </font>\n            </div>\n          </div>\n        </div>\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default Lottery;\n","import React, { Component } from \"react\";\n\n// import { Line, Circle } from \"rc-progress\";\n// import Countdown from \"react-countdown\";\n\nimport Web3 from \"web3\";\n\nimport gangster from \"../assets/gangster.png\";\nimport ewt from \"../assets/ewt.png\";\nimport ammo from \"../assets/ammo.png\";\nimport gngLotto from \"../assets/gngLotto.png\";\nimport promoAbout from \"../assets/promoAbout.png\";\n\nconst pugContractAddress = \"0x59b6196e41c118dfF75961257b882e86b915a0e8\";\nconst gsContractAddress = \"0x41c49ef86f513498D9Be19F4E920a6Afbe8Af4Cb\";\nconst ammoContractAddress = \"0x83Ed545185E1480411771FFDb62510f3939f9d9e\";\n\n// import LotteryContract from \"../../abis/Lottery.json\";\n\n// import gangster from \"../assets/gangster.png\";\n// import ewt from \"../assets/ewt.png\";\n// import ammo from \"../assets/ammo.png\";\n// import gngLotto from \"../assets/gngLotto.png\";\n// import premium from \"../assets/app/premium.png\";\n\n// const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n// const startContest_0 = new Date(2021, 6, 29);\n// const startContest_1 = new Date(2021, 6, 29);\n\n// const endContest_0 = new Date(2021, 7, 5);\n// const endContest_1 = new Date(2021, 7, 10);\n\n// var now = Date.now();\n// let dif = Math.round((endContest_0 - now) / oneDay);\n// let openContest_0 = false;\n// if (dif > 0) {\n//   openContest_0 = true;\n// }\n\nclass About extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    //!CARREGAR INITIAL DATA;\n\n    this.setState({});\n  }\n\n  async loadBlockchainData(dispatch) {\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      const netId = await web3.eth.net.getId();\n      const blockAc = await web3.eth.getBlockNumber();\n\n      console.log(netId);\n      console.log(`Block: ${blockAc}`);\n      // const algo = await web3.eth.Contract(dbank.abi,dbank.address);\n      // console.log(algo.toString());\n      const accounts = await web3.eth.getAccounts();\n\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n          web3: web3,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n        //     //! AQUI NO CONSTA LA NETWORK DE EWC\n        //     //? Podria solucionarse, subiendo el contrato a la EWC (P.e. REMIX)\n        //     //* Seria igual pero el Token.abi --> subido en la red EWC (deployed smart contract)\n        //     // const PugInst = new web3.eth.Contract(Token.abi, PUG.address);\n        // const ammoContract = new web3.eth.Contract(\n        //   Token.abi,\n        //   Token.networks[netId].address\n        // );\n        // const gsContract = new web3.eth.Contract(\n        //   Token.abi,\n        //   GS.networks[netId].address\n        // );\n        // const pugContract = new web3.eth.Contract(\n        //   Token.abi,\n        //   Token.networks[netId].address\n        // );\n        //     //* FAKE PUG_EWT\n        //     const fake_ewt_contract = new web3.eth.Contract(\n        //       Ewt_Fake.abi,\n        //       Ewt_Fake.networks[netId].address\n        //     ); //'0x7E77Fb69EEAf4Eafa7C0d2a8DdD151Fd3161e71c');\n        //     const fake_ewt_clp = await fake_ewt_contract.methods\n        //       .balanceOf(accounts[0])\n        //       .call();\n        //     const ewt_clp_wallet_balance = web3.utils.fromWei(fake_ewt_clp);\n        //     //* FAKE PUG_AMMO\n        //     const fake_ammo_contract = new web3.eth.Contract(\n        //       Ammo_Fake.abi,\n        //       Ammo_Fake.networks[netId].address\n        //     ); //'0x7E77Fb69EEAf4Eafa7C0d2a8DdD151Fd3161e71c');\n        //     const fake_ammo_clp = await fake_ammo_contract.methods\n        //       .balanceOf(accounts[0])\n        //       .call();\n        //     const ammo_clp_wallet_balance = web3.utils.fromWei(fake_ammo_clp);\n        //     console.log(Token.networks[netId].address);\n        //     const masterChef = new web3.eth.Contract(\n        //       MasterChef.abi,\n        //       MasterChef.networks[netId].address\n        //     );\n        //     console.log(MasterChef.networks[netId].address);\n        //     const ammo_wallet_wei = await ammoContract.methods\n        //       .balanceOf(this.state.account)\n        //       .call();\n        //     const ammoAddress = Token.networks[netId].address;\n        //     const ammo_wallet_balance = web3.utils.fromWei(ammo_wallet_wei);\n        //     const feeAddress = await masterChef.methods.getFeeAddress().call();\n        //     let user_farm_0 = await masterChef.methods\n        //       .userInfo(0, this.state.account)\n        //       .call();\n        //     let user_farm_1 = await masterChef.methods\n        //       .userInfo(1, this.state.account)\n        //       .call();\n        //     let pdt_rewards_0 = await masterChef.methods\n        //       .pendingSushi(0, this.state.account)\n        //       .call();\n        //     let pdt_rewards_1 = await masterChef.methods\n        //       .pendingSushi(1, this.state.account)\n        //       .call();\n        //     console.log(web3.utils.fromWei(user_farm_0.amount));\n        //     console.log(web3.utils.fromWei(user_farm_0.rewardDebt));\n        //     const depo_clp_ewt_amount = web3.utils.fromWei(user_farm_0.amount);\n        //     const depo_clp_ammo_amount = web3.utils.fromWei(user_farm_1.amount);\n        //     let containReward_0 = web3.utils.fromWei(pdt_rewards_0);\n        //     let containRewar_1 = web3.utils.fromWei(pdt_rewards_1);\n        //     let reward_farm_0 = (+containReward_0).toFixed(2);\n        //     let reward_farm_1 = (+containRewar_1).toFixed(2);\n        //     console.log(\"AMMO TO HARVEST Î\");\n        //     // let ewt_lp_rewards = (+reward_farm_0).toFixed(5);\n        //     // console.log(ewt_lp_rewards);\n        //     const farmContracts = [fake_ewt_contract, fake_ammo_contract];\n        //     console.log();\n        //     console.log(reward_farm_1);\n        //     this.setState({\n        //       //! AMMO\n        //       ammo: ammoContract,\n        //       ammoAddress: ammoAddress,\n        //       //! MasterChef\n        //       masterChef: masterChef,\n        //       masterChefAddress: MasterChef.networks[netId].address,\n        //       feeAddres: feeAddress,\n        //       //! All_Farms\n        //       farmContracts: farmContracts,\n        //       //?Farm_0\n        //       reward_ewt_pdt_ammo: reward_farm_0,\n        //       depo_clp_ewt_amount: depo_clp_ewt_amount,\n        //       //?Farm_1\n        //       reward_ammo_pdt_ammo: reward_farm_1,\n        //       depo_clp_ammo_amount: depo_clp_ammo_amount,\n        //       //? User Globals\n        //       ewt_clp_wallet_balance: ewt_clp_wallet_balance,\n        //       ammo_clp_wallet_balance: ammo_clp_wallet_balance,\n        //       ammo_wallet_balance: ammo_wallet_balance,\n        //       //* Progra Globals\n        //       web3: web3,\n        //       netId: netId,\n        //     });\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n\n  async addGS(dispatch) {\n    const tokenAddress = \"0x41c49ef86f513498D9Be19F4E920a6Afbe8Af4Cb\";\n    const tokenSymbol = \"G$\";\n    const tokenDecimals = 18;\n    const tokenImage =\n      \"https://firebasestorage.googleapis.com/v0/b/gswap-27c0a.appspot.com/o/bigGS.png?alt=media&token=e3d9ffc8-938f-441f-aa97-d0d373419eb7\";\n\n    try {\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n      const wasAdded = await window.ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n\n      if (wasAdded) {\n        console.log(\"Thanks for your interest!\");\n      } else {\n        console.log(\"Your loss!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async addPUG(dispatch) {\n    const tokenAddress = \"0x59b6196e41c118dfF75961257b882e86b915a0e8\";\n    const tokenSymbol = \"PUG\";\n    const tokenDecimals = 18;\n    const tokenImage =\n      \"https://firebasestorage.googleapis.com/v0/b/gswap-27c0a.appspot.com/o/bigPUG.png?alt=media&token=985d66d2-3dde-4768-b974-b0cea8cdf04c\";\n\n    try {\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n      const wasAdded = await window.ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n\n      if (wasAdded) {\n        console.log(\"Thanks for your interest!\");\n      } else {\n        console.log(\"Your loss!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async addAMMO(dispatch) {\n    const tokenAddress = \"0x83Ed545185E1480411771FFDb62510f3939f9d9e\";\n    const tokenSymbol = \"AMMO\";\n    const tokenDecimals = 18;\n    const tokenImage =\n      \"https://firebasestorage.googleapis.com/v0/b/gswap-27c0a.appspot.com/o/bigAMMO.png?alt=media&token=c9396456-bd0b-4be3-beab-4087def82f07\";\n\n    try {\n      // wasAdded is a boolean. Like any RPC method, an error may be thrown.\n      const wasAdded = await window.ethereum.request({\n        method: \"wallet_watchAsset\",\n        params: {\n          type: \"ERC20\", // Initially only supports ERC20, but eventually more!\n          options: {\n            address: tokenAddress, // The address that the token is at.\n            symbol: tokenSymbol, // A ticker symbol or shorthand, up to 5 chars.\n            decimals: tokenDecimals, // The number of decimals in the token\n            image: tokenImage, // A string url of the token logo\n          },\n        },\n      });\n\n      if (wasAdded) {\n        console.log(\"Thanks for your interest!\");\n      } else {\n        console.log(\"Your loss!\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  constructor(props) {\n    super(props);\n    this.state = {\n      //? Changable DATA:\n\n      //TODO: Lottery state\n      contest_0_winner: null,\n      account: \"\",\n      web3: \"undefined\",\n\n      //TODO: End Lottery state\n      //   //*Globals\n      //   web3: \"undefined\",\n      //   masterChef: null,\n      //   netId: null,\n      //   feeAddress: null,\n      //   //?UserGlobals\n      //   account: \"\",\n      //   balance: 0,\n      //   //!Balances\n      //   //* PUG_EWT\n      //   ewt_clp_wallet_balance: 0,\n      //   reward_ewt_pdt_ammo: 0.0,\n      //   depo_clp_ewt_amount: 0,\n      //   input_lp_ewt: 0,\n      //   //* PUG_AMMO\n      //   ammo_clp_wallet_balance: 0,\n      //   reward_ammo_pdt_ammo: 0.0,\n      //   depo_clp_ammo_amount: 0,\n      //   input_lp_ammo: 0,\n      //   //! Contracts&Addresses\n      //   farmContracts: [],\n      //   ammo: null,\n      //   masterChefAddress: null,\n      //   //?* State Management\n      //   pair: null,\n    };\n  }\n  render() {\n    return (\n      <div class=\"page\" style={{ background: \"black\" }}>\n        <div class=\"pot-banner\">\n          <div class=\"wrapper\">\n            <div class=\"banner-wrapper\">\n              <div class=\"txt-wrapper\">\n                <br></br>\n                <br></br>\n                <br></br>\n                <br></br>\n                <span class=\"title\">Welcome to G$wap</span>\n                <span class=\"sub-title\" align=\"center\">\n                  <font color=\"white\">\n                    <font size=\"+2\">\n                      <b>Official gTokens on MetaMask</b>\n                    </font>\n                  </font>\n                </span>\n                <br></br>\n                <br></br>\n                <div\n                  class=\"row\"\n                  style={{\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <a>\n                    {\" \"}\n                    <div\n                      class=\"bunny-button primGS clickable no-select no-wrap\"\n                      onClick={(e) => this.addGS(e)}\n                    >\n                      <div class=\"content\">Add G$</div>\n                    </div>\n                  </a>\n                  <div style={{ width: \"5px\" }}></div>\n\n                  <a>\n                    {\" \"}\n                    <div\n                      class=\"bunny-button primPUG clickable no-select no-wrap\"\n                      onClick={(e) => this.addPUG(e)}\n                    >\n                      <div class=\"content\">Add PUG</div>\n                    </div>\n                  </a>\n                  <div style={{ width: \"5px\" }}></div>\n\n                  <a>\n                    {\" \"}\n                    <div\n                      class=\"bunny-button primAMMO clickable no-select no-wrap\"\n                      onClick={(e) => this.addAMMO(e)}\n                    >\n                      <div class=\"content\">Add AMMO</div>\n                    </div>\n                  </a>\n                </div>\n                <br></br>\n                <br />\n\n                <br></br>\n                <div>\n                  <span class=\"title\" align=\"center\">\n                    <font color=\"white\">\n                      <i>\n                        \"There is no need to say it but as Pug Father I should\n                        just tell that every early supporter will be someway\n                        rewarded for their Loyalty to the PUG Mafia\"\n                      </i>\n                    </font>\n                  </span>\n                </div>\n                <br />\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <span class=\"title\" align=\"center\">\n                    <font color=\"white\">\n                      <b>\n                        <i>From Gangsters to Gangsters</i>\n                      </b>\n                    </font>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <br></br>\n        {/* <div class=\"container pg\">\n          <div class=\"pot-list\">\n            <div class=\"pot-item farming premium\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming premium\">\n                  <font color=\"ec6998\">1 Winner</font>\n                </div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n\n              <div class=\"title\">\n                <img src={gangster} height=\"100\" width=\"100px\" alt=\"token\" />\n\n                <div\n                  class=\"pot-jackpot premium\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  PUG POT\n                </div>\n              </div>\n\n              <span class=\"pot-estimated\">$74,869.82</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Open: <Countdown date={startContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">284,479.65 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item farming jackpot\">\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-status farming jackpot\">farming</div>\n                <div class=\"pot-token\">7 DAYS LOCKED</div>\n              </div>\n              <div class=\"pot-jackpot-title\">\n                <img src={gangster} height=\"170px\" width=\"170px\" alt=\"token\" />\n                <span class=\"pot-jackpot jackpot\">BUNNY jackpot</span>\n              </div>\n              <span class=\"pot-estimated\">$38,253.29</span>\n              <span class=\"pot-timestamp\">\n                <span class=\"pot-timestamp\">\n                  Countdown to Pot Closes: <Countdown date={endContest_1} />\n                </span>\n              </span>\n              <div class=\"pot-divide\"></div>\n              <div class=\"pot-status-wrapper\">\n                <div class=\"pot-token\">Total Deposit</div>\n                <div class=\"pot-token\">145,349.38 BUNNY</div>\n              </div>\n              <div class=\"bunny-button default clickable no-select deep-purple\">\n                <div class=\"content\">\n                  View more<div class=\"subtext\"></div>\n                </div>\n              </div>\n            </div>\n            <div class=\"pot-item empty \">\n              <img src={gngLotto} alt=\"cooking\" />\n              <span>More Coming soon</span>\n              <span>This is just the begining</span>\n            </div>\n          </div>\n        </div> */}\n\n        <br></br>\n        <div class=\"container pg\">\n          <div\n            class=\"pot-list\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <img className=\"home-card-image\" src={promoAbout} />\n          </div>\n        </div>\n\n        <br></br>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from \"react\";\n\nimport { Line, Circle } from \"rc-progress\";\nimport Countdown from \"react-countdown\";\n\nimport Web3 from \"web3\";\nimport \"../App.css\";\n\nimport GMasterChef from \"../../abis/GMasterChef.json\";\nimport GS from \"../../abis/GSToken.json\";\n\n//!AQUI\n// import Token from \"../../abis/SusuToken.json\";\n// import MasterChef from \"../../abis/MasterChef.json\";\n\nimport gangster from \"../assets/gangster.png\";\nimport ewt from \"../assets/ewt.png\";\nimport gngLotto from \"../assets/gngLotto.png\";\n// import ammo from \"../assets/ammo.png\";\nimport pugToken from \"../assets/pugToken.png\";\nimport gsToken from \"../assets/gs.png\";\nimport ammo from \"../assets/ammo.png\";\n\nconst GS_Block = 0.001074735449735;\nconst EWT_Block_Time = 5.8;\nconst EWT_Blocks_Day = (60 * 60 * 24) / EWT_Block_Time;\nconst days_year = 365;\nconst ttl_gs_allo = 5;\nconst gs_staking_alloc = 3;\n\nconst gsStakingContractAddress = \"0x41c49ef86f513498D9Be19F4E920a6Afbe8Af4Cb\";\nconst tokenABI = [\n  {\n    name: \"Transfer\",\n    inputs: [\n      { type: \"address\", name: \"_from\", indexed: true },\n      { type: \"address\", name: \"_to\", indexed: true },\n      { type: \"uint256\", name: \"_value\", indexed: false },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"Approval\",\n    inputs: [\n      { type: \"address\", name: \"_owner\", indexed: true },\n      { type: \"address\", name: \"_spender\", indexed: true },\n      { type: \"uint256\", name: \"_value\", indexed: false },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"__init__\",\n    outputs: [],\n    inputs: [\n      { type: \"bytes32\", name: \"_name\" },\n      { type: \"bytes32\", name: \"_symbol\" },\n      { type: \"uint256\", name: \"_decimals\" },\n      { type: \"uint256\", name: \"_supply\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"constructor\",\n  },\n  {\n    name: \"deposit\",\n    outputs: [],\n    inputs: [],\n    constant: false,\n    payable: true,\n    type: \"function\",\n    gas: 74279,\n  },\n  {\n    name: \"withdraw\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [{ type: \"uint256\", name: \"_value\" }],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 108706,\n  },\n  {\n    name: \"totalSupply\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 543,\n  },\n  {\n    name: \"balanceOf\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [{ type: \"address\", name: \"_owner\" }],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 745,\n  },\n  {\n    name: \"transfer\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_to\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 74698,\n  },\n  {\n    name: \"transferFrom\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_from\" },\n      { type: \"address\", name: \"_to\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 110600,\n  },\n  {\n    name: \"approve\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_spender\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 37888,\n  },\n  {\n    name: \"allowance\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_owner\" },\n      { type: \"address\", name: \"_spender\" },\n    ],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 1025,\n  },\n  {\n    name: \"name\",\n    outputs: [{ type: \"bytes32\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 723,\n  },\n  {\n    name: \"symbol\",\n    outputs: [{ type: \"bytes32\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 753,\n  },\n  {\n    name: \"decimals\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 783,\n  },\n];\n\nclass Stake extends Component {\n  //*Start Component\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    this.GsStakingRewardDisplay().then(() => {\n      const gs_staking_interval = setInterval(\n        () => this.GsStakingRewardDisplay(),\n        10 * 1000\n      );\n      this.gs_staking_interval = gs_staking_interval;\n    });\n    //!CARREGAR INITIAL DATA;\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.gs_staking_interval);\n  }\n\n  async loadBlockchainData(dispatch) {\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      window.location.reload();\n    });\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      try {\n        window.ethereum.enable().then(function () {\n          // User has allowed account access to DApp...\n        });\n      } catch (e) {\n        // User has denied account access to DApp...\n      }\n      const netId = await web3.eth.net.getId();\n\n      const blockAc = await web3.eth.getBlockNumber();\n      console.log(netId);\n      console.log(`Block: ${blockAc}`);\n      // const algo = await web3.eth.Contract(dbank.abi,dbank.address);\n      // console.log(algo.toString());\n      const accounts = await web3.eth.getAccounts();\n\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n\n          //* Progra Globals\n          web3: web3,\n          netId: netId,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n        //!AQUI\n        //TODO: AQUI\n        const gsContract = new web3.eth.Contract(\n          GS.abi,\n          GS.networks[netId].address\n        );\n        const totalSupply = await gsContract.methods.totalSupply().call();\n\n        const gs_supply_apy =\n          (100 * ((GS_Block / totalSupply) * (GS_Block * EWT_Blocks_Day) + 1)) ^\n          (days_year - 1 - 1); //!  G$ SUPPLY APY\n        gs_supply_apy = (gs_supply_apy * gs_staking_alloc) / ttl_gs_allo;\n        gs_supply_apy = (+gs_supply_apy).toFixed(2);\n\n        const gsStakingContract = new web3.eth.Contract(\n          tokenABI,\n          gsStakingContractAddress\n        );\n        const gMasterChef = new web3.eth.Contract(\n          GMasterChef.abi,\n          GMasterChef.networks[netId].address\n        );\n        const gs_wallet_wei = await gsContract.methods\n          .balanceOf(this.state.account)\n          .call();\n\n        const gS_wallet_balance = web3.utils.fromWei(gs_wallet_wei);\n        console.log(`My G$ Wallet Balance: ${gS_wallet_balance}`);\n        //TODO: AQUI\n        const gSFeeAddress = await gMasterChef.methods.getFeeAddress().call();\n\n        let user_staking_0 = await gMasterChef.methods\n          .userInfo(1, this.state.account)\n          .call();\n        let pdt_gs_rewards_0 = await gMasterChef.methods\n          .pendingSushi(1, this.state.account)\n          .call();\n\n        //TODO: AQUI\n        const depo_gs_staking_precision = web3.utils.fromWei(\n          user_staking_0.amount\n        );\n        const depo_gs_staking = (+depo_gs_staking_precision).toFixed(5);\n\n        // //! APYsss G$\n        gs_supply_apy =\n          (100 * ((GS_Block / totalSupply) * (GS_Block * EWT_Blocks_Day) + 1)) ^\n          (days_year - 1 - 1); //!  G$ SUPPLY APY\n        gs_supply_apy = (gs_supply_apy * gs_staking_alloc) / ttl_gs_allo;\n\n        gs_supply_apy = (+gs_supply_apy).toFixed(2);\n        const gStakingContracts = [gsStakingContract];\n\n        this.setState({\n          gStakingContracts: gStakingContracts,\n          gMasterChef: gMasterChef,\n          gs: gsContract,\n          gs_wallet_balance: gS_wallet_balance,\n          gmasterChefAddress: GMasterChef.networks[netId].address,\n\n          gSfeeAddres: gSFeeAddress,\n          depo_gs_staking: depo_gs_staking,\n          depo_gs_staking_precision: depo_gs_staking_precision,\n          gs_supply_apy: gs_supply_apy,\n        });\n\n        //! AQUI-end-\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      window.alert(\"Please install MetaMask\");\n    }\n  }\n\n  //! REWARDS IN STAKING (G$)\n\n  async GsStakingRewardDisplay() {\n    //TODO: This is my own implementation of FARMING MODE\n    // if (this.state.farmMode == true) {\n\n    try {\n      console.log(\"G$ Staking UPDATE REWARDS\");\n      const pdt_rewards_0 = await this.state.gMasterChef.methods\n        .pendingSushi(1, this.state.account)\n        .call();\n      const containGsReward_0 = this.state.web3.utils.fromWei(pdt_rewards_0);\n      let reward_farm_0 = (+containGsReward_0).toFixed(5);\n      reward_farm_0 = reward_farm_0\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n      this.setState({\n        reward_gs_staking: reward_farm_0,\n        gs_reward_precision: containGsReward_0,\n      });\n    } catch (e) {\n      console.log(e);\n    }\n    // } else {\n\n    // }\n  }\n\n  async DepositGsStaking(amount) {\n    //! DEPOSIT IN FARMS (G$)\n    if (amount != 0) {\n      const user_staking_0 = await this.state.gStakingContracts[0].methods\n        .balanceOf(this.state.account)\n        .call();\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"2\");\n\n      const dep_amount = this.state.web3.utils.toWei(amount);\n\n      let deposit = new this.state.web3.utils.BN(dep_amount);\n      const allow = dep_amount;\n      const fee = new this.state.web3.utils.BN(\"10000000000000000\");\n      deposit = deposit - fee;\n\n      if (this.state.GMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n          const allowed = await this.state.gStakingContracts[0].methods\n            .approve(this.state.gmasterChefAddress, allow)\n            .send({\n              from: this.state.account,\n            });\n\n          //TODO: 3\n          //* Fee GS deposit\n          // await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n          //   from: this.state.account,\n          //   gas: gas,\n          //   gasPrice: gasPrice,\n          // });\n\n          await this.state.gMasterChef.methods.deposit(1, deposit).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, deposit: \", e);\n        }\n      }\n    } else {\n    }\n  }\n\n  async WithdrawGsStaking(e) {\n    if (this.state.depo_gs_staking > 0) {\n      const user_farm_0_gs = await this.state.gMasterChef.methods\n        .userInfo(1, this.state.account)\n        .call();\n      const maxAmount = this.state.web3.utils.fromWei(user_farm_0_gs.amount);\n      const withdraw = new this.state.web3.utils.BN(\n        this.state.web3.utils.toWei(maxAmount)\n      );\n      const gas = new this.state.web3.utils.BN(\"1000000\");\n      const gasPrice = new this.state.web3.utils.BN(\"20000\");\n      const fee = new this.state.web3.utils.BN(\"5000000000000000\");\n\n      const currentGSBalance = await this.state.gs.methods\n        .balanceOf(this.state.account)\n        .call();\n\n      e.preventDefault();\n      if (this.state.pMasterChef !== \"undefined\") {\n        try {\n          const gFeeAddress = await this.state.gMasterChef.methods\n            .getFeeAddress()\n            .call();\n\n          //TODO: 3\n          //* FEE (G$)\n          await this.state.gs.methods.transfer(gFeeAddress, fee).send({\n            from: this.state.account,\n            gas: gas,\n            gasPrice: gasPrice,\n          });\n\n          await this.state.gMasterChef.methods\n            .withdraw(1, withdraw)\n            .send({ from: this.state.account });\n          window.location.reload();\n        } catch (e) {\n          console.log(\"Error, withdraw: \", e);\n        }\n      }\n    } else {\n      return;\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: \"\",\n      web3: \"undefined\",\n      netId: null,\n\n      gs: null,\n      gs_wallet_balance: 0.0,\n      gFeeAddress: null,\n      gMasterChef: null,\n      gmasterChefAddress: null,\n      gStakingContracts: [],\n      input_gs_staking: 0,\n      depo_gs_staking: 0.0,\n      reward_gs_staking: 0.0,\n    };\n  }\n\n  Change_GS_Amount = (event) => {\n    console.log(event.target.value);\n    if (event.target.value == undefined) {\n      this.setState({\n        input_gs_staking: this.state.gs_wallet_balance,\n      });\n    } else {\n      this.setState({ input_gs_staking: event.target.value });\n      //this opens in a new tab (believe that is what the owner of the question wanted if not you can do window.location.href = \"/insert/your/path/here\".\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <div class=\"root\">\n          <br></br>\n          <div class=\"page\" style={{ background: \"black\" }}>\n            <div class=\"pot-banner\">\n              <div class=\"wrapper\">\n                <br></br>\n                <br></br>\n                <div class=\"banner-wrapper\">\n                  <div class=\"txt-wrapper\">\n                    <span class=\"title\">\n                      G<font size=\"+3\">$taking</font>\n                    </span>\n                    <span class=\"sub-title\">\n                      <font color=\"white\">\n                        The G$wap Staking is for real EWC Gs. Stop worrying\n                        about fees, Stake, Earn & Enjoy.\n                      </font>\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"wrapper\">\n              <div\n                class=\"container apy\"\n                style={{ width: \"100%\", alignItems: \"center\" }}\n              >\n                <i>{this.state.gs_supply_apy}%</i>\n                <font size=\"1\">APY</font>\n              </div>\n              <a>\n                <div\n                  class=\"container pg\"\n                  style={{ width: \"100%\", alignItems: \"center\" }}\n                >\n                  <div>\n                    <img\n                      height=\"240\"\n                      width=\"240\"\n                      src={gsToken}\n                      alignItems=\"center\"\n                    />\n                  </div>\n                  <h3\n                    syle={{\n                      alignContent: \"left\",\n                      alignItems: \"left\",\n                      width: \"100%\",\n                    }}\n                    color=\"body\"\n                  >\n                    {this.state.depo_gs_staking == 0 ? (\n                      <font color=\"fe1e70\">\n                        <i>\n                          <font size=\"+2\">$</font>\n\n                          <font size=\"+1\">take</font>\n                        </i>{\" \"}\n                      </font>\n                    ) : (\n                      <font color=\"fe1e70\">\n                        <i>\n                          <font size=\"+1\">$</font>\n                          <font size=\"+1\" color=\"white\">\n                            taked:{\" \"}\n                          </font>\n                        </i>{\" \"}\n                        <i>\n                          <font size=\"+2\">{this.state.depo_gs_staking}</font>\n                          <font size=\"+1\" color=\"white\">\n                            G\n                          </font>\n                          <font size=\"1\">$</font>{\" \"}\n                        </i>{\" \"}\n                        <i>\n                          {\" \"}\n                          <font size=\"+1\">R</font>\n                          <font size=\"+1\" color=\"white\">\n                            ewards:{\" \"}\n                          </font>\n                        </i>{\" \"}\n                        <i>\n                          <font size=\"+3\" color=\"fe1e70\">\n                            {this.state.reward_gs_staking}\n                            <font size=\"+1\" color=\"white\">\n                              G\n                            </font>\n                            <font size=\"1\" color=\"fe1e70\">\n                              $\n                            </font>{\" \"}\n                          </font>\n                        </i>{\" \"}\n                      </font>\n                    )}\n                  </h3>\n                  <div>\n                    <div\n                      class=\"token-input\"\n                      style={{\n                        marginLeft: \"12.5px\",\n                        alignContent: \"center\",\n                        alignItems: \"center\",\n                        width: \"100%\",\n                      }}\n                    >\n                      {/* TODO: AQUI */}\n\n                      <div\n                        class=\"token-input-wrapper\"\n                        style={{\n                          alignContent: \"center\",\n                          alignItems: \"center\",\n                          width: \"100%\",\n                        }}\n                      >\n                        <input\n                          class=\"token-input\"\n                          placeholder={\n                            this.state.input_gs_staking == 0\n                              ? \"0.0\"\n                              : this.state.input_gs_staking\n                          }\n                          onChange={this.Change_GS_Amount}\n                        />\n                        <i>\n                          <font size=\"+1\">\n                            <font color=\"white\">G</font>\n                            <font color=\"fe1e70\">$ </font>\n                          </font>\n                        </i>\n                        <div\n                          class=\"token-input-max clickable\"\n                          onClick={(e) => this.Change_GS_Amount(e)}\n                        >\n                          <i>MAX</i>\n                        </div>\n                      </div>\n                    </div>\n                    {/* TODO: AQUI */}\n                    <div\n                      class=\"ewt_balance\"\n                      align=\"right\"\n                      style={{ paddingRight: \"20px\" }}\n                    >\n                      <span class=\"label\">\n                        <font color=\"fe1e70\" size=\"1\">\n                          <b>\n                            <i>My Wallet G$:</i>\n                          </b>\n                        </font>{\" \"}\n                      </span>\n                      <span class=\"value\">\n                        <font color=\"white\" size=\"1\">\n                          <i>{this.state.gs_wallet_balance}</i>\n                        </font>\n                      </span>\n                    </div>\n\n                    <div\n                      class=\"row\"\n                      style={{\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                      }}\n                    >\n                      <a>\n                        <div\n                          class=\"bunny-button clickable no-select\"\n                          onClick={(e) =>\n                            this.DepositGsStaking(this.state.input_gs_staking)\n                          }\n                        >\n                          <div class=\"content\">\n                            <font\n                              color={\n                                this.state.depo_gs_staking == 0\n                                  ? \"white\"\n                                  : \"gray\"\n                              }\n                            >\n                              DEPOSIT\n                            </font>\n\n                            <div class=\"subfont\"></div>\n                          </div>\n                        </div>\n                      </a>\n                      <a>\n                        <div\n                          class=\"details return\"\n                          style={{ marginLeft: \"20px\" }}\n                          align=\"right\"\n                        >\n                          <div\n                            class=\"bunny-button clickable no-select\"\n                            onClick={(e) => this.WithdrawGsStaking(e)}\n                          >\n                            <div class=\"content\">\n                              <font\n                                color={\n                                  this.state.depo_gs_staking != 0\n                                    ? \"white\"\n                                    : \"gray\"\n                                }\n                              >\n                                WITHDRAW\n                              </font>\n\n                              <font size=\"1\">\n                                + G\n                                <i>\n                                  <font color=\"ec6998\">$</font>\n                                </i>\n                              </font>\n                              <div class=\"subfont\"></div>\n                            </div>\n                          </div>\n                        </div>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </a>\n              <br></br>\n              <br></br>\n              <div class=\"container pg\">\n                <div\n                  class=\"pot-list\"\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <div class=\"pot-item empty \">\n                    <img src={gngLotto} alt=\"cooking\" />\n                    <font color=\"grey\">\n                      <span>More Coming Soon</span>\n                    </font>\n                    <font color=\"grey\">\n                      <span>This is just the begining</span>{\" \"}\n                    </font>\n                  </div>\n                </div>\n              </div>\n              <br></br>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stake;\n","import React, { Component, useState, useEffect } from \"react\";\n\nimport Web3 from \"web3\";\nimport { useHistory } from \"react-router-dom\";\n\nimport pug from \"./assets/gangster.png\";\n\nconst tokenABI = [\n  {\n    name: \"Transfer\",\n    inputs: [\n      { type: \"address\", name: \"_from\", indexed: true },\n      { type: \"address\", name: \"_to\", indexed: true },\n      { type: \"uint256\", name: \"_value\", indexed: false },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"Approval\",\n    inputs: [\n      { type: \"address\", name: \"_owner\", indexed: true },\n      { type: \"address\", name: \"_spender\", indexed: true },\n      { type: \"uint256\", name: \"_value\", indexed: false },\n    ],\n    anonymous: false,\n    type: \"event\",\n  },\n  {\n    name: \"__init__\",\n    outputs: [],\n    inputs: [\n      { type: \"bytes32\", name: \"_name\" },\n      { type: \"bytes32\", name: \"_symbol\" },\n      { type: \"uint256\", name: \"_decimals\" },\n      { type: \"uint256\", name: \"_supply\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"constructor\",\n  },\n  {\n    name: \"deposit\",\n    outputs: [],\n    inputs: [],\n    constant: false,\n    payable: true,\n    type: \"function\",\n    gas: 74279,\n  },\n  {\n    name: \"withdraw\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [{ type: \"uint256\", name: \"_value\" }],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 108706,\n  },\n  {\n    name: \"totalSupply\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 543,\n  },\n  {\n    name: \"balanceOf\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [{ type: \"address\", name: \"_owner\" }],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 745,\n  },\n  {\n    name: \"transfer\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_to\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 74698,\n  },\n  {\n    name: \"transferFrom\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_from\" },\n      { type: \"address\", name: \"_to\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 110600,\n  },\n  {\n    name: \"approve\",\n    outputs: [{ type: \"bool\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_spender\" },\n      { type: \"uint256\", name: \"_value\" },\n    ],\n    constant: false,\n    payable: false,\n    type: \"function\",\n    gas: 37888,\n  },\n  {\n    name: \"allowance\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [\n      { type: \"address\", name: \"_owner\" },\n      { type: \"address\", name: \"_spender\" },\n    ],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 1025,\n  },\n  {\n    name: \"name\",\n    outputs: [{ type: \"bytes32\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 723,\n  },\n  {\n    name: \"symbol\",\n    outputs: [{ type: \"bytes32\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 753,\n  },\n  {\n    name: \"decimals\",\n    outputs: [{ type: \"uint256\", name: \"out\" }],\n    inputs: [],\n    constant: true,\n    payable: false,\n    type: \"function\",\n    gas: 783,\n  },\n];\n\nconst pugContractAddress = \"0x59b6196e41c118dfF75961257b882e86b915a0e8\";\n\nclass NavBar extends Component {\n  async componentWillMount() {\n    await this.loadBlockchainData(this.props.dispatch);\n    await this.loadUrlPrice(\n      \"https://us-central1-gswap-27c0a.cloudfunctions.net/pugPrice\"\n    );\n    //!CARREGAR INITIAL DATA;\n  }\n\n  async loadUrlPrice(url) {\n    const response = await fetch(\n      \"https://us-central1-gswap-27c0a.cloudfunctions.net/pugPrice\"\n    );\n    const fetchJson = await response.json();\n    const pugPrice = fetchJson.toString();\n\n    this.setState({\n      pugPrice: fetchJson,\n    });\n  }\n\n  async loadBlockchainData(dispatch) {\n    window.ethereum.on(\"accountsChanged\", function (accounts) {\n      window.location.reload();\n    });\n    if (typeof window.ethereum !== \"undefined\") {\n      const web3 = new Web3(window.ethereum);\n      const netId = await web3.eth.net.getId();\n      const blockAc = await web3.eth.getBlockNumber();\n      const pugContract = new web3.eth.Contract(tokenABI, pugContractAddress);\n\n      const accounts = await web3.eth.getAccounts();\n\n      //load balance\n      if (typeof accounts[0] !== \"undefined\") {\n        const balance = await web3.eth.getBalance(accounts[0]);\n        const pugBalance = await pugContract.methods\n          .balanceOf(accounts[0])\n          .call();\n        const pgBal = web3.utils.fromWei(pugBalance);\n        const round_pug_balance = (+pgBal).toFixed(2);\n\n        const gangster_pug_balance =\n          round_pug_balance / 1000 > 1\n            ? (+(round_pug_balance / 1000)).toFixed(2)\n            : 0;\n\n        this.setState({\n          account: accounts[0],\n          balance: web3.utils.fromWei(balance),\n          web3: web3,\n          round_pug_balance: round_pug_balance,\n          gangster_pug_balance: gangster_pug_balance,\n        });\n      } else {\n        window.alert(\"Please login with MetaMask\");\n      }\n\n      //load contracts\n      try {\n      } catch (e) {\n        console.log(\"Error\", e);\n        window.alert(\"Contracts not deployed to the current network\");\n      }\n    } else {\n      const result = await window.ethereum.enable();\n      window.location.reload();\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      //? Changable DATA:\n\n      //TODO: Lottery state\n      contest_0_winner: null,\n      account: \"\",\n      web3: \"undefined\",\n\n      pugPrice: \"99.999\",\n      pugBalance: 0,\n      round_pug_balance: 0,\n      gangster_pug_balance: 0,\n      screenWidth: window.innerWidth,\n    };\n  }\n\n  render() {\n    return (\n      <nav\n        className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\"\n        style={{\n          background:\n            \"radial-gradient(100% 100% at 0px 0px, black, transparent), orange\",\n        }}\n      >\n        <div\n          className=\"row\"\n          style={{\n            paddingLeft: 15,\n            paddingTop: 7.5,\n          }}\n        >\n          {this.state.screenWidth >= 900 ? (\n            <div>\n              <img src={pug} className=\"App-logo\" alt=\"logo\" height=\"70\" />\n              <a className=\"navbar-brand col-sm-2 col-md-2 mr-0\" href=\"#/about\">\n                <div class=\"wasabi-banner\">\n                  <div\n                    class=\"wrapper\"\n                    style={{\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                  >\n                    <div\n                      class=\"wasabi-banner-wrapper\"\n                      style={{\n                        verticalAlign: \"center\",\n                      }}\n                    >\n                      <div class=\"txt-wrapper\">\n                        <span class=\"title\">\n                          <font size=\"+3\">G</font>\n                          <font size=\"+2\">$</font>\n                          <font size=\"+1\">wap</font>\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </a>\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n        <div className=\"content\"></div>\n\n        <div\n          className=\"nav-wrapper\"\n          style={{\n            padding: \"10px\",\n          }}\n        >\n          <div className=\"topbar-nav no-select\">\n            <a class={\"item clickable \"} href=\"#/stake\">\n              <font color=\"ec6998\">\n                G<font size=\"1\">$</font>\n              </font>\n              Stake\n            </a>\n            <a class={\"item clickable \"} href=\"#/farms\">\n              <font color=\"ec6998\">\n                G<font size=\"1\">$</font>\n              </font>\n              Farms\n            </a>\n            {/* <a class=\"item clickable\" href=\"/zap\">\n                Swap\n              </a> */}\n            <a class=\"item clickable\" href=\"#/lottery\">\n              <font color=\"ec6998\">\n                G<font size=\"1\">$</font>\n              </font>\n              Lotto\n            </a>\n            {/* <a\n                class=\"item clickable\"\n                href=\"https://explorer.energyweb.org/tokens/0x59b6196e41c118dfF75961257b882e86b915a0e8/token-holders\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Rank\n              </a> */}\n            <a\n              class=\"item clickable\"\n              href=\"https://twitter.com/mobpug\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <font color=\"ec6998\">\n                G<font size=\"1\"></font>\n              </font>\n              News\n            </a>\n          </div>\n        </div>\n        <div\n          class=\"account-button\"\n          no-select\n          href=\"https://twitter.com/mobpug\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {this.state.screenWidth >= 900 ? (\n            <div>\n              <div class=\"bunny-price clickable\">\n                <font color=\"white\">\n                  <b>\n                    <font color=\"ec6998\">PUG:</font>\n                  </b>{\" \"}\n                  {this.state.pugPrice}\n                  <b>$</b>\n                </font>\n              </div>\n            </div>\n          ) : (\n            <div></div>\n          )}\n\n          <div class=\"account-button no-select\"></div>\n        </div>\n        {this.state.screenWidth >= 900 ? (\n          <div>\n            <span>\n              <font color=\"ec6998\"> M</font>\n              <font color=\"white\">y PUG</font>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <b>\n                  <font color=\"ec6998\">\n                    {this.state.gangster_pug_balance != 0 ? (\n                      <div>\n                        <font>{this.state.gangster_pug_balance}</font>\n                        <i>\n                          <font color=\"white\">K</font>\n                        </i>\n                      </div>\n                    ) : (\n                      <div>{this.state.round_pug_balance}</div>\n                    )}\n                  </font>{\" \"}\n                </b>\n              </div>\n            </span>\n          </div>\n        ) : (\n          <div></div>\n        )}\n        {/* <div>\n          <span>\n            <font color=\"ec6998\"> M</font>\n            <font color=\"white\">y AMMO</font>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <font color=\"ec6998\">\n                {\" \"}\n                {this.state.gangster_pug_balance != 0\n                  ? this.state.gangster_pug_balance + \" \"\n                  : this.state.round_pug_balance}\n              </font>{\" \"}\n              ,\n              <font color=\"white\">\n                {this.state.gangster_pug_balance != 0 ? \"K\" : \"\"}\n              </font>\n            </div>\n          </span>\n        </div> */}\n        <a>\n          {\" \"}\n          <div\n            class=\"bunny-button primary clickable no-select no-wrap\"\n            onClick={(e) => this.loadBlockchainData(e)}\n          >\n            <div class=\"content\">\n              {this.state.account == \"\"\n                ? \"Connect Wallet\"\n                : this.state.account.substr(0, 5) +\n                  \"***\" +\n                  this.state.account.substr(this.state.account.length - 4)}\n            </div>\n          </div>\n        </a>\n        <div style={{ width: \"5px\" }}></div>\n      </nav>\n    );\n  }\n}\n\nexport default NavBar;\n","import React from \"react\";\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  Link,\n  NavLink,\n  HashRouter,\n} from \"react-router-dom\";\n\nimport Home from \"./App\";\nimport Lottery from \"./pages/Lottery\";\nimport About from \"./pages/About\";\nimport Stake from \"./pages/Staking\";\nimport NavBar from \"./NavBar\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <HashRouter>\n        <main>\n          <NavBar />\n          <Switch>\n            <Route path=\"/\" exact>\n              <About />\n            </Route>\n            <Route path=\"/stake\" exact>\n              <Stake />\n            </Route>\n            <Route path=\"/farms\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/lottery\" exact>\n              <Lottery />\n            </Route>\n            <Redirect to=\"/\" />\n          </Switch>\n        </main>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, HashRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./components/MApp\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// ReactDOM.render(<MApp />, document.getElementById(\"root\"));\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/gangster.abce896b.png\";","module.exports = __webpack_public_path__ + \"static/media/ewt.97c55617.png\";","module.exports = __webpack_public_path__ + \"static/media/gLotto.d17ebb7b.png\";"],"sourceRoot":""}